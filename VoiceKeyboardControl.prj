<?xml version="1.0" encoding="Shift_JIS" ?>
<!-- なんちゃってXML version 0.1( ObjectEditor専用 ) -->
<xobject>
<ID>project</ID>
<x0>0</x0>
<y0>0</y0>
<width>200</width>
<height>100</height>
<ID_maker>174</ID_maker>
<objectname>VoiceKeyboardControl</objectname>
<description>新規のアプリケーション</description>
<codeclip>
<ID>_CSTART</ID>
<x0>789</x0>
<y0>309</y0>
<width>143</width>
<height>22</height>
<codetext>Activity ACTIVITY;
</codetext>
</codeclip>
<pin>
<ID>_PSTART</ID>
<x0>62</x0>
<y0>232</y0>
<width>55</width>
<height>24</height>
<text>Start()</text>
<px>50</px>
<py>50</py>
</pin>
<xobject>
<ID>_X_G87</ID>
<x0>436</x0>
<y0>280</y0>
<width>193</width>
<height>85</height>
<objectname>Control</objectname>
<description></description>
<codeclip>
<ID>_C83</ID>
<x0>29</x0>
<y0>104</y0>
<width>264</width>
<height>33</height>
<codetext>// 音声の認識
public void recognize( double[] voice) {
    
  int maxi = 0;
  double r = 0.0, max = 0.0;
  for( int i = 0; i &lt; voice_template.size(); i++ ){

    // テンプレートの音声
    double[] ref = ((VoiceTemplate)(voice_template.get(i))).voice;

    // 音声の長さを比べて範囲内なら比較する
    double p = (double)ref.length / voice.length;
    if(p &lt; limit_length &amp;&amp; 1/p &lt; limit_length){

      // 重み(大きいほど優先順位が高くなる)
      double w = ((VoiceTemplate)(voice_template.get(i))).weight;

      // テンプレートと録音した音声の相関値を計算する(トリガタイミングの誤差を考慮して少しずつずらして比較して一番大きいのをとる)
      r = compare_voice( ref, voice, -2 ) * w;
      if(r &gt; max){ max = r; maxi = i; }

      r = compare_voice( ref, voice, -1 ) * w;
      if(r &gt; max){ max = r; maxi = i; }

      r = compare_voice( ref, voice, 0  ) * w;
      if(r &gt; max){ max = r; maxi = i; }

      r = compare_voice( ref, voice, 1  ) * w; 
      if(r &gt; max){ max = r; maxi = i; }

      r = compare_voice( ref, voice, 2  ) * w;
      if(r &gt; max){ max = r; maxi = i; }

    }
  }
      
  // 認識結果を送る
  if( max &gt; thresh_recognize ){
    voice_no0 = maxi;
    result( ((VoiceTemplate)(voice_template.get(maxi))).text+&quot;(&quot;+max+&quot;)\n&quot;);
  }

  else{
    voice_no0 = -1;
    result(&quot;***(&quot;+max+&quot;)\n&quot;);
  }
}


</codetext>
</codeclip>
<codeclip>
<ID>_C81</ID>
<x0>28</x0>
<y0>144</y0>
<width>465</width>
<height>36</height>
<codetext>// 2つの音声を比較して相関値を返す(offsetはずらす位置)
public double compare_voice( double[] ref, double[] voice, int offset ){

  int x, y, width, height;
  double a = 0.0, nn = 0.0, ar = 0.0, av = 0.0, pr = 0.0, pv = 0.0;

  if( voice == null || ref == null ) return 0.0;
  if( voice.length &lt;= 0 || ref.length &lt;=0 ) return 0.0;
    
  // 右側にずらす場合
  if( offset &gt;=1 ){
    if( voice.length &lt;= offset * HEARING_HEIGHT ) return 0.0;
    
    // ずらす voice-&gt;xvoice
    double[] xvoice = new double[voice.length - offset * HEARING_HEIGHT];
    for( int i = 0; i &lt; xvoice.length; i++ ) xvoice[i] = voice[i + offset * HEARING_HEIGHT];

    width = ref.length / HEARING_HEIGHT;
    if( ( x= xvoice.length / HEARING_HEIGHT ) &lt; width ) width = x;
    height  = HEARING_HEIGHT;
    nn = (double)( width * height );

    // ref[]の平均値を求める
    ar = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        ar += ref[ HEARING_HEIGHT * x + y ];
      }
    }
    ar /= nn; 

    // xvoice[]の平均値を求める
    av = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        av += xvoice[ HEARING_HEIGHT * x + y ];
      }
    }
    av /= nn; 

    // ref[]のパワーを求める
     pr = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a = ref[ HEARING_HEIGHT * x + y ] - ar;
        pr += a * a;
      }
    }
    if( pr == 0.0 ) return 0.0;

    // xvoice[]のパワーを求める
    pv = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a = xvoice[ HEARING_HEIGHT * x + y ] - av;
        pv += a * a;
      }
    }
    if( pv == 0.0 ) return 0.0;

    // ref[]とxvoice[]の相関値を求める
    a = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a += ( ref[ HEARING_HEIGHT * x + y ] - ar ) * ( xvoice[ HEARING_HEIGHT * x + y ] - av ) ;
      }
    }
    return a / Math.sqrt( pv * pr );
  }


  // 左側にずらす場合
  else if( offset &lt;= -1 ){
    if( ref.length &lt;= -offset * HEARING_HEIGHT ) return 0.0;
    
    // ずらす ref-&gt;xref
    double[] xref = new double[ref.length + offset * HEARING_HEIGHT];
    for( int i = 0; i &lt; xref.length; i++ ) xref[i] = ref[i - offset * HEARING_HEIGHT];

    width  = xref.length / HEARING_HEIGHT;
    if( ( x= voice.length / HEARING_HEIGHT ) &lt; width ) width = x;
    height  = HEARING_HEIGHT;
    nn = (double)( width * height );

    // xref[]の平均値を求める
    ar = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        ar += xref[ HEARING_HEIGHT * x + y ];
      }
    }
    ar /= nn; 

    // voice[]の平均値を求める
    av = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        av += voice[ HEARING_HEIGHT * x + y ];
      }
    }
    av /= nn; 

    // xref[]のパワーを求める
    pr = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a = xref[ HEARING_HEIGHT * x + y ] - ar;
        pr += a * a;
      }
    }
    if( pr == 0.0 ) return 0.0;

    // voice[]のパワーを求める
    pv = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a = voice[ HEARING_HEIGHT * x + y ] - av;
        pv += a * a;
      }
    }
    if( pv == 0.0 ) return 0.0;

    // xref[]とvoice[]の相関値を求める
    a = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a += ( xref[ HEARING_HEIGHT * x + y ] - ar ) * ( voice[ HEARING_HEIGHT * x + y ] - av ) ;
      }
    }
    return a / Math.sqrt( pv * pr );
  }

  // ずらさない場合
  else{

    width  = ref.length / HEARING_HEIGHT;
    if( ( x= voice.length / HEARING_HEIGHT ) &lt; width ) width = x;
    height  = HEARING_HEIGHT;
    nn = (double)( width * height );

    // ref[]の平均値を求める
    ar = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        ar += ref[ HEARING_HEIGHT * x + y ];
      }
    }
    ar /= nn; 

    // voice[]の平均値を求める
    av = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        av += voice[ HEARING_HEIGHT * x + y ];
      }
    }
    av /= nn; 

    // ref[]のパワーを求める
    pr = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a = ref[ HEARING_HEIGHT * x + y ] - ar;
        pr += a * a;
      }
    }
    if( pr == 0.0 ) return 0.0;

    // voice[]のパワーを求める
    pv = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a = voice[ HEARING_HEIGHT * x + y ] - av;
        pv += a * a;
      }
    }
    if( pv == 0.0 ) return 0.0;

    // ref[]とvoice[]の相関値を求める
    a = 0.0;
    for( x = 0; x &lt; width; x++ ){
      for( y = 0; y &lt; height; y++ ){
        a += ( ref[ HEARING_HEIGHT * x + y ] - ar ) * ( voice[ HEARING_HEIGHT * x + y ] - av ) ;
      }
    }
    return a / Math.sqrt( pv * pr );
  }

}
</codetext>
</codeclip>
<codeclip>
<ID>_C62</ID>
<x0>29</x0>
<y0>43</y0>
<width>262</width>
<height>54</height>
<codetext>// 録音スレッド
RecordThread record_thread = null;
class RecordThread extends Thread {

  int state;
  static final int NEUTRAL = 0;
  static final int OFF = 1;
  static final int SENS_ON = 2;
  static final int ON = 3;
  static final int SENS_OFF = 4;
  int HEARING_BUFFER_SIZE = 65536;

  public void run() {
    int i, j, k, len, width, height, state, offset, count;
    int start_point, end_point;
    double   a, u, v, x, y, t, p, trigger, power;

dprint(&quot;start rec thread\n&quot;);

    // 音声データのバッファサイズ (byte)を設定
    int audio_buffer_size = android.media.AudioRecord.getMinBufferSize(
                     SAMPLING_RATE,
                     AudioFormat.CHANNEL_IN_MONO,
                     AudioFormat.ENCODING_PCM_16BIT
    );

    // AudioRecordの作成
     AudioRecord audioRec = new AudioRecord(
                     MediaRecorder.AudioSource.MIC,
                     SAMPLING_RATE,
                     AudioFormat.CHANNEL_IN_MONO,
                     AudioFormat.ENCODING_PCM_16BIT,
                     audio_buffer_size
     );
    audioRec.startRecording();	// 録音開始
    state = NEUTRAL;
    offset = 0;
    count = 0;
    start_point = end_point = 0;
    short[]  sound_buffer   = new short[SOUND_DFT_SIZE];
    double[] sound_av       = new double[HEARING_HEIGHT];
    double[] hearing_buffer = new double[HEARING_BUFFER_SIZE];

    while(is_running){       

      // 録音データを読み込む(SOUND_DFT_SIZEは配列要素の数)
      audioRec.read(sound_buffer, 0, SOUND_DFT_SIZE);

      // 取り込んだ聴覚データをDFTして開けておいたところにセットする

      // 振幅がlogスケールの場合
      if(alog_scale){
        trigger = power = 0.0;
        for( i = 0; i &lt; HEARING_HEIGHT; i++ ){
          for( x = y = 0.0, j = 0; j &lt; SOUND_DFT_SIZE; j++ ){
            a = (double)sound_buffer[j];
            x += a * cos_table[i][j];
            y += a * sin_table[i][j];
          }
          // log尺度のパワー値を得る(同時に周波数補正をかける)
          p = hearing_buffer[i + offset] = Math.log((x * x + y * y) + bias) * hosei[i];
          sound_av[i] = ((sound_filter - 1.0) * sound_av[i] + p) / sound_filter;
          t = p / sound_av[i];
          if(t &gt; trigger) trigger = t;
          power += p;
        }
        // 強調処理
        a = Math.pow(power/HEARING_HEIGHT/SOUND_DFT_SIZE, enhance);
        for( i = 0; i &lt; HEARING_HEIGHT; i++ ){
          hearing_buffer[i + offset] *= a;
        }
      }

      // 振幅がリニアスケールの場合
      else{
        trigger = power = 0.0;
        for( i = 0; i &lt; HEARING_HEIGHT; i++ ){
          for( x = y = 0.0, j = 0; j &lt; SOUND_DFT_SIZE; j++ ){
            a = (double)sound_buffer[j];
            x += a * cos_table[i][j];
            y += a * sin_table[i][j];
          }
          // リニア(べき乗)尺度のパワー値を得る(同時に周波数補正をかける)
          p = hearing_buffer[i + offset] = Math.pow( (x * x + y * y), acompress ) * hosei[i];
          sound_av[i] = ((sound_filter - 1.0) * sound_av[i] + p) / sound_filter;
          t = p / sound_av[i];
          if(t &gt; trigger) trigger = t;
          power += p;
        }
        // 強調処理
        a = Math.pow(power/HEARING_HEIGHT/SOUND_DFT_SIZE, enhance);
        for( i = 0; i &lt; HEARING_HEIGHT; i++ ){
          hearing_buffer[i + offset] *= a;
        }
      }
      
      // 状態ごとの動作を以下に記述
      switch(state){
          
      // NEWTRAL状態：起動してしばらくは各フィルタ変数が安定するのを待つ
      case NEUTRAL:
        if(count &gt; startup_time){
           state = OFF;
           update_display();  // 落ち着いたら表示を更新する
        }
        break;

      // OFF状態
      case OFF:
        if(trigger &gt; thresh_trigger_on){
          state = SENS_ON;
          start_point = offset - TRIGGER_MARGIN*HEARING_HEIGHT;  // スレッショルドを越える直前をサンプリング開始位置とする
          if(start_point &lt; 0) start_point += HEARING_BUFFER_SIZE;
          count = 0;
        }
        break;

      // OFFからONに遷移する状態
      case SENS_ON:
        if(trigger &lt; thresh_trigger_off)  state = OFF;
        else{
          if(count &gt; thresh_count_on) state = ON;
        }
        break;

      // ON状態
      case ON:
        if(trigger &lt; thresh_trigger_off){
          state = SENS_OFF;
          end_point = offset + TRIGGER_MARGIN*HEARING_HEIGHT; // スレッショルドを下回った所をサンプリング終了位置とする
          if(end_point &gt;= HEARING_BUFFER_SIZE) end_point -= HEARING_BUFFER_SIZE;
          count = 0;
        }
        break;

      // ONからOFFに遷移する状態
      case SENS_OFF:
        if(trigger &gt; thresh_trigger_on)  state = ON;
        else{
          if(count &gt; thresh_count_off){

            // サンプリング範囲内のデータを音声データ配列voiceに転送する
            len = end_point - start_point;
            if(len &lt; 0) len += HEARING_BUFFER_SIZE;
            voice = new double[len];
            for(i = start_point, j = 0; j &lt; len; i++, j++){
              if(i &gt;= HEARING_BUFFER_SIZE) i -= HEARING_BUFFER_SIZE;
              voice[j] = hearing_buffer[i];
            }
            state = OFF;

            // 認識処理開始
            new Thread(new Runnable() {
	          @Override
	          public void run() {
                recognize(voice);
	          }
	        }).start();

          }
        }
        break;

      }

      offset += HEARING_HEIGHT;
      if( offset &gt;= HEARING_BUFFER_SIZE ) offset = 0;
      count++;
    }
    audioRec.stop();	// 録音終了
    audioRec.release();

  }//run()

}//RecordThread
</codetext>
</codeclip>
<ID_maker>125</ID_maker>
<pin>
<ID>_P88</ID>
<x0>37</x0>
<y0>189</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>112</px>
<py>3</py>
</pin>
<operation>
<ID>_O89</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>138</x0>
<y0>201</y0>
<width>103</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 初期設定





// サービスが実行されていたら停止
try{
Intent intent = new Intent(); 
intent.setClassName(&quot;com.example.vkeyboard&quot;, &quot;com.example.vkeyboard.VKeyboardService&quot;); 
ACTIVITY.stopService(intent);
} catch(Exception e){dprint(e+&quot;\n&quot;);}




// 音声認識用三角関数テーブルを作成
  sin_table = new double[HEARING_HEIGHT][SOUND_DFT_SIZE];
  cos_table = new double[HEARING_HEIGHT][SOUND_DFT_SIZE];

// 対数スケールの場合
if(flog_scale){
  int[] dist  = new int[HEARING_HEIGHT+1]; // 周波数分布テーブル
  double p = Math.pow( HEARING_HEIGHT-1.0, 1.0 / HEARING_HEIGHT );
  for( int i = 0; i &lt;= HEARING_HEIGHT; i++ ){
    int d = (int)(Math.pow( p, (double)i ));
    dist[i] = i+1 &gt;= d? i+1 : d;
  }
  for(int i = 0; i &lt; HEARING_HEIGHT; i++){
    for(int j = 0; j &lt; SOUND_DFT_SIZE; j++){
      double w = 0.5 - 0.5 * Math.cos(j * 6.2832 / (SOUND_DFT_SIZE-1)); 
      sin_table[i][j] = 0;
      cos_table[i][j] = 0;
      double r = 1 / Math.sqrt(dist[i+1] - dist[i]);
      for(int k = dist[i]; k &lt; dist[i+1]; k++){
        sin_table[i][j] += w * r * Math.sin(k * j * 6.2832 / SOUND_DFT_SIZE);
        cos_table[i][j] += w * r * Math.cos(k * j * 6.2832 / SOUND_DFT_SIZE);
      }
    }
  }
}

// リニアスケールの場合
else{
  for(int i = 0; i &lt; HEARING_HEIGHT; i++){
    for(int j = 0; j &lt; SOUND_DFT_SIZE; j++){
      double w = 0.5 - 0.5 * Math.cos(j * 6.2832 / (SOUND_DFT_SIZE-1)); 
      sin_table[i][j] = w * Math.sin(i * j * 6.2832 / SOUND_DFT_SIZE);
      cos_table[i][j] = w * Math.cos(i * j * 6.2832 / SOUND_DFT_SIZE);
    }
  }
}


// 録音スレッドを開始
is_running = true;
record_thread = new RecordThread();
record_thread.start();
</codetext>
</operation>
<relation>
<ID>_R90</ID>
<pin1name>_P88</pin1name>
<pin2name>_O89</pin2name>
</relation>
<pin>
<ID>_P91</ID>
<x0>28</x0>
<y0>255</y0>
<width>81</width>
<height>29</height>
<text>learn()</text>
<px>5</px>
<py>34</py>
</pin>
<operation>
<ID>_O93</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>132</x0>
<y0>257</y0>
<width>268</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 録音した音声を学習する


if(tsize &gt; 0){

  // 報酬学習
  double[] v = new double[tsize];
  double[] u =((VoiceTemplate)(voice_template.get(voice_no))).voice;
  for(int i = 0; i &lt; v.length; i++){
  if(i &lt; u.length) v[i] = u[i]; else v[i] = 0;
  }
  for(int i = 0; i &lt; v.length; i++){
    double d = 0;
    if(i &lt; voice.length) d = voice[i];
    v[i] = ((learn_param_o - 1.0) * v[i] + d) / learn_param_o;
  }
  ((VoiceTemplate)(voice_template.get(voice_no))).voice = v;

  // ペナルティ学習
  if(voice_no0 &gt;= 0 &amp;&amp; voice_no0 != voice_no){
    u =((VoiceTemplate)(voice_template.get(voice_no0))).voice;
    for(int i = 0; i &lt; u.length; i++){
      double d = 0;
      if(i &lt; voice.length &amp;&amp; i &lt; tsize) d = voice[i];
      u[i] = ((learn_param_x - 1.0) * u[i] - d) / learn_param_x;
    }
  }

  update_display();
}
</codetext>
</operation>
<relation>
<ID>_R94</ID>
<pin1name>_P91</pin1name>
<pin2name>_O93</pin2name>
</relation>
<pin>
<ID>_P102</ID>
<x0>302</x0>
<y0>109</y0>
<width>108</width>
<height>27</height>
<text>result(String s)</text>
<px>77</px>
<py>28</py>
</pin>
<codeclip>
<ID>_C105</ID>
<x0>29</x0>
<y0>2</y0>
<width>224</width>
<height>36</height>
<codetext>// 三角関数テーブル
double[][] sin_table, cos_table;
</codetext>
</codeclip>
<pin>
<ID>_P111</ID>
<x0>27</x0>
<y0>329</y0>
<width>60</width>
<height>30</height>
<text>ins()</text>
<px>7</px>
<py>49</py>
</pin>
<pin>
<ID>_P112</ID>
<x0>26</x0>
<y0>389</y0>
<width>60</width>
<height>30</height>
<text>del()</text>
<px>6</px>
<py>66</py>
</pin>
<pin>
<ID>_P113</ID>
<x0>25</x0>
<y0>449</y0>
<width>60</width>
<height>30</height>
<text>exit()</text>
<px>127</px>
<py>47</py>
</pin>
<operation>
<ID>_O114</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>137</x0>
<y0>323</y0>
<width>260</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 録音した音声をテンプレートに挿入する


if(voice == null) return;
double[] v = new double[voice.length];
for(int i = 0; i &lt; voice.length; i++) v[i] = voice[i];
String t = ((SpannableStringBuilder)text.getText()).toString();
double w = Double.parseDouble(((SpannableStringBuilder)weight.getText()).toString());
int c = Integer.parseInt(((SpannableStringBuilder)code.getText()).toString());
VoiceTemplate vt = new VoiceTemplate(t, w, c, v);
voice_template.insertElementAt(vt, voice_no);

// 表示を更新
update_display();
</codetext>
</operation>
<relation>
<ID>_R115</ID>
<pin1name>_P111</pin1name>
<pin2name>_O114</pin2name>
</relation>
<operation>
<ID>_O116</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>134</x0>
<y0>386</y0>
<width>260</width>
<height>43</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>25</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// テンプレートから音声を削除する



voice_template.removeElementAt(voice_no);
int size = voice_template.size();
if(voice_no &gt;= size) voice_no = size -1; 

// 表示を更新
update_display();
</codetext>
</operation>
<relation>
<ID>_R117</ID>
<pin1name>_P112</pin1name>
<pin2name>_O116</pin2name>
</relation>
<operation>
<ID>_O118</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>134</x0>
<y0>447</y0>
<width>129</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 終了処理



try{
is_running = false;
if(record_thread != null){
  record_thread.join();
  record_thread = null;
}
} catch(Exception e){dprint(e+&quot;\n&quot;);}
</codetext>
</operation>
<relation>
<ID>_R119</ID>
<pin1name>_P113</pin1name>
<pin2name>_O118</pin2name>
</relation>
<codeclip>
<ID>_C124</ID>
<x0>514</x0>
<y0>145</y0>
<width>157</width>
<height>31</height>
<codetext>// 認識結果(音声番号)
int voice_no0;
</codetext>
</codeclip>
</xobject>
<relation>
<ID>_R89</ID>
<pin1name>_PSTART</pin1name>
<pin2name>_A88(_Pstart)</pin2name>
</relation>
<xobject>
<ID>_X91</ID>
<x0>435</x0>
<y0>218</y0>
<width>173</width>
<height>58</height>
<ID_maker>17</ID_maker>
<objectname>File_IO</objectname>
<description></description>
<pin>
<ID>_P1</ID>
<x0>23</x0>
<y0>70</y0>
<width>65</width>
<height>29</height>
<text>save()</text>
<px>123</px>
<py>12</py>
</pin>
<pin>
<ID>_P12</ID>
<x0>26</x0>
<y0>12</y0>
<width>60</width>
<height>30</height>
<text>load()</text>
<px>83</px>
<py>33</py>
</pin>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>115</x0>
<y0>6</y0>
<width>312</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//音声テンプレートを読み込む(無い場合は作成する)


try{
  dbg = new FileWriter(new File(Environment.getExternalStorageDirectory(), DEBUG_FILE));
} catch(Exception e){}


try{

if(!voice_data_file.exists()){
  int cnt = 0;
  InputStream is = ACTIVITY.getResources().openRawResource(R.raw.voicedata);
  while (is.read()!=-1) cnt++;
  byte[] b = new byte[cnt];
  is.reset();
  is.read(b);
  is.close();
  FileOutputStream os = new FileOutputStream(voice_data_file);
  os.write(b);
  os.close();
}

String line = null;
BufferedReader din = new BufferedReader( new FileReader(voice_data_file));

// 変数を読み込む
while(true){
  if( ( line=din.readLine() ) == null ) return;
  if( line.equals( &quot;&quot; ) ) break;
  if( line.equals(&quot;debug_mode=true&quot;))         debug_mode=true;
  if( line.equals(&quot;debug_mode=false&quot;))        debug_mode=false;
  if( line.equals(&quot;auto_learn=true&quot;))         auto_learn=true;
  if( line.equals(&quot;auto_learn=false&quot;))        auto_learn=false;
  if( line.equals(&quot;writable=true&quot;))           writable=true;
  if( line.equals(&quot;writable=false&quot;))          writable=false;
  if( line.equals(&quot;flog_scale=true&quot;))         flog_scale=true;
  if( line.equals(&quot;flog_scale=false&quot;))        flog_scale=false;
  if( line.equals(&quot;alog_scale=true&quot;))         alog_scale=true;
  if( line.equals(&quot;alog_scale=false&quot;))        alog_scale=false;
  if( line.startsWith(&quot;startup_time=&quot;))       startup_time=Integer.parseInt(line.substring(13));
  if( line.startsWith(&quot;sound_filter=&quot;))       sound_filter=Double.parseDouble(line.substring(13));
  if( line.startsWith(&quot;thresh_trigger_on=&quot;))  thresh_trigger_on=Double.parseDouble(line.substring(18));
  if( line.startsWith(&quot;thresh_trigger_off=&quot;)) thresh_trigger_off=Double.parseDouble(line.substring(19));
  if( line.startsWith(&quot;thresh_count_on=&quot;))    thresh_count_on=Integer.parseInt(line.substring(16));
  if( line.startsWith(&quot;thresh_count_off=&quot;))   thresh_count_off=Integer.parseInt(line.substring(17));
  if( line.startsWith(&quot;thresh_recognize=&quot;))   thresh_recognize=Double.parseDouble(line.substring(17));
  if( line.startsWith(&quot;bias=&quot;))               bias=Double.parseDouble(line.substring(5));
  if( line.startsWith(&quot;acompress=&quot;))          acompress=Double.parseDouble(line.substring(10));
  if( line.startsWith(&quot;learn_param_o=&quot;))      learn_param_o=Double.parseDouble(line.substring(14));
  if( line.startsWith(&quot;learn_param_x=&quot;))      learn_param_x=Double.parseDouble(line.substring(14));
  if( line.startsWith(&quot;limit_length=&quot;))       limit_length=Double.parseDouble(line.substring(13));
  if( line.startsWith(&quot;enhance=&quot;))            enhance=Double.parseDouble(line.substring(8));
}

hosei = new double[HEARING_HEIGHT];
for(int i = 0; true; i++){
  if((line=din.readLine()) == null){din.close(); return;}
  if( line.equals( &quot;&quot; ) ) break;
  hosei[i%HEARING_HEIGHT] = Double.parseDouble(line);
}

// 音声データを読み込む
voice_template = new Vector();
while(true){
  if((line=din.readLine()) == null){din.close(); return;}
  if(line.equals(&quot;END&quot;)) break;
  String t = line;
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  double w = Double.parseDouble(line);
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  int c = Integer.parseInt(line);
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  int s = Integer.parseInt(line);
  double[] v = new double[s];
  for(int i = 0; i &lt; s; i++){
    if((line=din.readLine()) == null){din.close(); return;}
    v[i] = Double.parseDouble(line);
  }
  voice_template.add(new VoiceTemplate(t, w, c, v));
}

din.close();
} catch( Exception e ){ dprint(e+&quot;\n&quot;); }

voice_no = 0;
</codetext>
</operation>
<operation>
<ID>_O14</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>113</x0>
<y0>64</y0>
<width>194</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//音声テンプレートを保存する

try{
  BufferedWriter dout = new BufferedWriter( new FileWriter(voice_data_file) );
  
  // 変数を保存する
  dout.write(&quot;flog_scale=&quot; + flog_scale + &quot;\n&quot;);
  dout.write(&quot;alog_scale=&quot; + alog_scale + &quot;\n&quot;);
  dout.write(&quot;auto_learn=&quot; + auto_learn + &quot;\n&quot;);
  dout.write(&quot;writable=&quot; + writable + &quot;\n&quot;);
  dout.write(&quot;startup_time=&quot; + startup_time + &quot;\n&quot;);
  dout.write(&quot;sound_filter=&quot; + sound_filter + &quot;\n&quot;);
  dout.write(&quot;thresh_trigger_on=&quot; + thresh_trigger_on + &quot;\n&quot;);
  dout.write(&quot;thresh_trigger_off=&quot; + thresh_trigger_off + &quot;\n&quot;);
  dout.write(&quot;thresh_count_on=&quot; + thresh_count_on + &quot;\n&quot;);
  dout.write(&quot;thresh_count_off=&quot; + thresh_count_off + &quot;\n&quot;);
  dout.write(&quot;thresh_recognize=&quot; + thresh_recognize + &quot;\n&quot;);
  dout.write(&quot;bias=&quot; + bias + &quot;\n&quot;);
  dout.write(&quot;acompress=&quot; + acompress + &quot;\n&quot;);
  dout.write(&quot;learn_param_o=&quot; + learn_param_o + &quot;\n&quot;);
  dout.write(&quot;learn_param_x=&quot; + learn_param_x + &quot;\n&quot;);
  dout.write(&quot;limit_length=&quot; + limit_length + &quot;\n&quot;);
  dout.write(&quot;enhance=&quot; + enhance + &quot;\n&quot;);
  dout.write(&quot;\n&quot;);

  for(int i = 0; i &lt; HEARING_HEIGHT; i++){
    dout.write(hosei[i] + &quot;\n&quot;);
  }
  dout.write(&quot;\n&quot;);
  
  // 音声データを保存する
  for( int i = 0; i &lt; voice_template.size(); i++ ){
    dout.write(((VoiceTemplate)voice_template.get(i)).text + &quot;\n&quot; );
    dout.write(((VoiceTemplate)voice_template.get(i)).weight + &quot;\n&quot; );
    dout.write(((VoiceTemplate)voice_template.get(i)).code + &quot;\n&quot; );
    double[] v = ((VoiceTemplate)(voice_template.get(i))).voice;
    dout.write(v.length + &quot;\n&quot;);
    for (int j = 0; j &lt;  v.length; j++){
      dout.write(v[j] + &quot;\n&quot;);
    }
  }
  dout.write(&quot;END\n&quot;);
  dout.close();
} catch( Exception e ){dprint(e+&quot;\n&quot;);}
</codetext>
</operation>
<relation>
<ID>_R15</ID>
<pin1name>_P12</pin1name>
<pin2name>_O13</pin2name>
</relation>
<relation>
<ID>_R16</ID>
<pin1name>_P1</pin1name>
<pin2name>_O14</pin2name>
</relation>
</xobject>
<xobject>
<ID>_X92</ID>
<x0>434</x0>
<y0>367</y0>
<width>178</width>
<height>191</height>
<ID_maker>44</ID_maker>
<objectname>Display</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>30</x0>
<y0>70</y0>
<width>60</width>
<height>30</height>
<text>prev()</text>
<px>2</px>
<py>26</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>26</x0>
<y0>123</y0>
<width>60</width>
<height>30</height>
<text>next()</text>
<px>2</px>
<py>42</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>22</x0>
<y0>193</y0>
<width>137</width>
<height>23</height>
<text>voice_no_set(int v)</text>
<px>0</px>
<py>60</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>11</x0>
<y0>311</y0>
<width>115</width>
<height>23</height>
<text>paint(Canvas g)</text>
<px>1</px>
<py>174</py>
</pin>
<operation>
<ID>_O6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>171</x0>
<y0>240</y0>
<width>155</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(Canvas g)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>32</inpiny0>
<inpinwidth>86</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// テンプレートを描画


dprint(&quot;display template\n&quot;);

if(voice_no &gt;= voice_template.size()) return;
double[] v = ((VoiceTemplate)(voice_template.get(voice_no))).voice;
if( v == null ) return;
double e = Math.exp( (80.0 - (double)bright) / 4 );
int xwidth = v.length / HEARING_HEIGHT;
int width   = seimon0.getWidth();
int height = seimon0.getHeight();
paint.setStyle(Style.FILL);
float dx = (float)width  / HEARING_WIDTH;
float dy = (float)height / HEARING_HEIGHT;
for( int x = 0; x &lt; xwidth; x++ ){
  for( int y = 0; y &lt; HEARING_HEIGHT; y++ ){
    int t = (int)( v[ HEARING_HEIGHT * x + y ] / e );
    if( t &gt; 255 ) t = 255;
    paint.setColor(Color.rgb( t, t, t));
    float fx = dx * (float)x;
    float fy = dy * (float)y;
    g.drawRect( fx, height - fy - dy, fx + dx, height - fy, paint);
  }
}

// 末尾を表示
float x = tsize / HEARING_HEIGHT * width / HEARING_WIDTH;
paint.setStyle(Paint.Style.STROKE); 
paint.setStrokeWidth(2.0f);
paint.setColor(Color.rgb( 255, 0, 0));
g.drawLine( x, 0, x, height-1, paint);


dprint(&quot;display template end\n&quot;);

</codetext>
</operation>
<codeclip>
<ID>_C8</ID>
<x0>351</x0>
<y0>70</y0>
<width>190</width>
<height>21</height>
<codetext>Paint paint = new Paint();
</codetext>
</codeclip>
<operation>
<ID>_O9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>172</x0>
<y0>48</y0>
<width>120</width>
<height>53</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 番号を-１する


voice_no--;
if(voice_no &lt; 0) voice_no = 0;
update_display();
</codetext>
</operation>
<relation>
<ID>_R10</ID>
<pin1name>_P0</pin1name>
<pin2name>_O9</pin2name>
</relation>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>107</y0>
<width>121</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 番号を+１する



voice_no++;
if(voice_no &gt;= voice_template.size()) voice_no = voice_template.size() - 1;
update_display();
</codetext>
</operation>
<relation>
<ID>_R12</ID>
<pin1name>_P1</pin1name>
<pin2name>_O11</pin2name>
</relation>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>176</x0>
<y0>170</y0>
<width>138</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(int val)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>32</inpiny0>
<inpinwidth>65</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 番号をセットする


voice_no = val * (voice_template.size()-1) / 100;
update_display();
</codetext>
</operation>
<relation>
<ID>_R14</ID>
<pin1name>_P2</pin1name>
<pin2name>_O13</pin2name>
</relation>
<pin>
<ID>_P20</ID>
<x0>9</x0>
<y0>253</y0>
<width>110</width>
<height>22</height>
<text>paint0(Canvas g)</text>
<px>0</px>
<py>137</py>
</pin>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>170</x0>
<y0>307</y0>
<width>156</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(Canvas g)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>32</inpiny0>
<inpinwidth>86</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 音声を描画


dprint(&quot;display voice\n&quot;);
dprint(&quot;HEARING_HEIGHT=&quot;+HEARING_HEIGHT+&quot;\n&quot;);


double[] v = voice;
if( v == null ) return;
double e = Math.exp( (80.0 - (double)bright) / 4 );
int xwidth = v.length / HEARING_HEIGHT;
int width   = seimon.getWidth();
int height = seimon.getHeight();
paint.setStyle(Style.FILL);
float dx = (float)width  / HEARING_WIDTH;
float dy = (float)height / HEARING_HEIGHT;
for( int x = 0; x &lt; xwidth; x++ ){
  for( int y = 0; y &lt; HEARING_HEIGHT; y++ ){
    int t = (int)( v[ HEARING_HEIGHT * x + y ] / e );
    if( t &gt; 255 ) t = 255;
    paint.setColor(Color.rgb( t, t, t));
    float fx = dx * (float)x;
    float fy = dy * (float)y;
    g.drawRect( fx, height - fy - dy, fx + dx, height - fy, paint);
  }
}

// 末尾を表示
float x = tsize / HEARING_HEIGHT * width / HEARING_WIDTH;
paint.setStyle(Paint.Style.STROKE); 
paint.setStrokeWidth(2.0f);
paint.setColor(Color.rgb( 255, 0, 0));
g.drawLine( x, 0, x, height-1, paint);

dprint(&quot;display voice end\n&quot;);

</codetext>
</operation>
<relation>
<ID>_R23</ID>
<pin1name>_P20</pin1name>
<pin2name>_O6</pin2name>
</relation>
<relation>
<ID>_R24</ID>
<pin1name>_P4</pin1name>
<pin2name>_O21</pin2name>
</relation>
<operation>
<ID>_O28</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>187</x0>
<y0>399</y0>
<width>117</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(int v)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>69</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>bright = v;


update_display();
</codetext>
</operation>
<pin>
<ID>_P29</ID>
<x0>14</x0>
<y0>398</y0>
<width>106</width>
<height>29</height>
<text>bright_set(int v)</text>
<px>0</px>
<py>77</py>
</pin>
<relation>
<ID>_R30</ID>
<pin1name>_P29</pin1name>
<pin2name>_O28</pin2name>
</relation>
<operation>
<ID>_O36</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>185</x0>
<y0>473</y0>
<width>148</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(TextView t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>seimon0 = t;
</codetext>
</operation>
<operation>
<ID>_O35</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>195</x0>
<y0>551</y0>
<width>148</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(TextView t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>seimon = t;
</codetext>
</operation>
<pin>
<ID>_P34</ID>
<x0>0</x0>
<y0>480</y0>
<width>154</width>
<height>28</height>
<text>seimon0_is(TextView t)</text>
<px>0</px>
<py>117</py>
</pin>
<pin>
<ID>_P33</ID>
<x0>0</x0>
<y0>571</y0>
<width>154</width>
<height>28</height>
<text>seimon_is(TextView t)</text>
<px>0</px>
<py>158</py>
</pin>
<relation>
<ID>_R38</ID>
<pin1name>_P34</pin1name>
<pin2name>_O36</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_P33</pin1name>
<pin2name>_O35</pin2name>
</relation>
<codeclip>
<ID>_C40</ID>
<x0>351</x0>
<y0>39</y0>
<width>212</width>
<height>21</height>
<codetext>int HEARING_WIDTH = 64;
</codetext>
</codeclip>
<pin>
<ID>_P41</ID>
<x0>391</x0>
<y0>129</y0>
<width>119</width>
<height>30</height>
<text>length_set(int v)</text>
<px>0</px>
<py>98</py>
</pin>
<operation>
<ID>_O42</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>528</x0>
<y0>129</y0>
<width>210</width>
<height>56</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(int v)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>54</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// テンプレートのサイズをセット


tsize = v * HEARING_HEIGHT * HEARING_WIDTH / 100;
update_display();
</codetext>
</operation>
<relation>
<ID>_R43</ID>
<pin1name>_P41</pin1name>
<pin2name>_O42</pin2name>
</relation>
</xobject>
<relation>
<ID>_R96</ID>
<pin1name>_A88(_PAprev)</pin1name>
<pin2name>_X92(_P0)</pin2name>
</relation>
<relation>
<ID>_R97</ID>
<pin1name>_A88(_PAnext)</pin1name>
<pin2name>_X92(_P1)</pin2name>
</relation>
<codeclip>
<ID>_C103</ID>
<x0>1</x0>
<y0>89</y0>
<width>361</width>
<height>126</height>
<codetext>// 音声テンプレート
Vector voice_template;
class VoiceTemplate{
  String text;    // 表示テキスト
  double weight; // 重み(優先順位)
  int code;        // キーコード
  double[] voice; // 音声データ
  VoiceTemplate( String t, double w, int c, double[] v ){

    text = t;
    weight = w;
    code = c;
    voice = v;  
  }
}

</codetext>
</codeclip>
<codeclip>
<ID>_C104</ID>
<x0>685</x0>
<y0>0</y0>
<width>309</width>
<height>272</height>
<codetext>// 各種パラメータ
boolean flog_scale = false; // 周波数スケール
boolean alog_scale = false; // 振幅スケール
boolean auto_learn=false; // 自動学習
boolean writable=false; // 書き込み可能
int startup_time = 300;
double sound_filter = 150.0;
double thresh_trigger_on = 2;
double thresh_trigger_off = 2;
int thresh_count_on = 4;
int thresh_count_off = 10;
double thresh_recognize = 0.1;
double bias = 1; // ノイズ抑制用バイアス
double acompress = 0.3;  // 振幅圧縮係数
double learn_param_o = 8;  // 学習パラメータ
double learn_param_x =128; // 学習パラメータ
double limit_length = 1.1; // 音声の長さ比較用
double enhance = 0;  // 強調パラメータ

</codetext>
</codeclip>
<relation>
<ID>_R105</ID>
<pin1name>_A88(_Pstart)</pin1name>
<pin2name>_X91(_P12)</pin2name>
</relation>
<relation>
<ID>_R106</ID>
<pin1name>_X91(_P12)</pin1name>
<pin2name>_X_G87(_P88)</pin2name>
</relation>
<relation>
<ID>_R111</ID>
<pin1name>_A88(_PPseimon)</pin1name>
<pin2name>_X92(_P4)</pin2name>
</relation>
<relation>
<ID>_R114</ID>
<pin1name>_A88(_Presult)</pin1name>
<pin2name>_X_G130(_P133)</pin2name>
</relation>
<codeclip>
<ID>_C116</ID>
<x0>790</x0>
<y0>335</y0>
<width>184</width>
<height>34</height>
<codetext>// 音声テンプレートファイル
File voice_data_file = new File( &quot;/sdcard/VoiceData.txt&quot; );


//File voice_data_file = new File( Environment.getDataDirectory(),&quot;VoiceData.txt&quot; );

</codetext>
</codeclip>
<operation>
<ID>_O117</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>656</x0>
<y0>279</y0>
<width>125</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>30</inpiny0>
<inpinwidth>82</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 結果を表示する


handler.post(new Runnable() {
  @Override
  public void run() {
    result.setText(s);
  }
});


update_display();
</codetext>
</operation>
<relation>
<ID>_R118</ID>
<pin1name>_X_G87(_P102)</pin1name>
<pin2name>_O117</pin2name>
</relation>
<codeclip>
<ID>_C121</ID>
<x0>4</x0>
<y0>0</y0>
<width>284</width>
<height>82</height>
<codetext>// 定数
static final int SAMPLING_RATE = 16000;
static final int HEARING_HEIGHT = 128;
static final int SOUND_DFT_SIZE = 256;
static final int TRIGGER_MARGIN = 2;
</codetext>
</codeclip>
<プロパティ>
<ID>properties</ID>
<LookandFeel>javax.swing.plaf.metal.MetalLookAndFeel</LookandFeel>
<MainWinx0>0</MainWinx0>
<MainWiny0>0</MainWiny0>
<MainWinWidth>1024</MainWinWidth>
<MainWinHeight>745</MainWinHeight>
<MesgWinx0>0</MesgWinx0>
<MesgWiny0>0</MesgWiny0>
<MesgWinWidth>1024</MesgWinWidth>
<MesgWinHeight>744</MesgWinHeight>
<FileWinx0>89</FileWinx0>
<FileWiny0>478</FileWiny0>
<FileWinWidth>578</FileWinWidth>
<FileWinHeight>262</FileWinHeight>
<EditWinx0>347</EditWinx0>
<EditWiny0>0</EditWiny0>
<EditWinWidth>676</EditWinWidth>
<EditWinHeight>541</EditWinHeight>
<PropWinx0>1</PropWinx0>
<PropWiny0>1</PropWiny0>
<PropWinWidth>615</PropWinWidth>
<PropWinHeight>448</PropWinHeight>
<DividerLocation1>2</DividerLocation1>
<DividerLocation2>2</DividerLocation2>
<ToolBarVisible>1</ToolBarVisible>
<ViewSourceAtCompile>0</ViewSourceAtCompile>
<NoSourceCreate>0</NoSourceCreate>
<JavaEditCommand>geany</JavaEditCommand>
<JavaViewCommand></JavaViewCommand>
<HelpCommand></HelpCommand>
<ApplicationType>4</ApplicationType>
<CompileCommand0>./compile_java</CompileCommand0>
<RunCommand0>./run_java</RunCommand0>
<GUIDesignerCommand0>java -jar guidsin.jar -java</GUIDesignerCommand0>
<ImportFiles0> import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.geom.*;
import java.awt.print.*;
import javax.swing.border.*;
import javax.swing.filechooser.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.image.BufferedImage;
import javax.sound.sampled.*;

class Starter{
  public static void main( String args[] ){
    %AppName% ap = new %AppName%();
    ap.ARGS = args;
    ap.Start();
  }
}
</ImportFiles0>
<ProgramStartupCode0> String[] ARGS;
</ProgramStartupCode0>
<NativeHelpCommand0></NativeHelpCommand0>
<CompileCommand1></CompileCommand1>
<RunCommand1></RunCommand1>
<GUIDesignerCommand1>java -jar guidsin.jar -applet</GUIDesignerCommand1>
<ImportFiles1> import java.awt.*;
 import java.awt.event.*;
 import java.applet.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
 public class javatext extends Applet {
   %AppName% ap;
   public void init() {
     ap = new %AppName%();
     ap.APPLET = this;
     ap.Start();
   }
 }
</ImportFiles1>
<ProgramStartupCode1> Applet APPLET;
</ProgramStartupCode1>
<NativeHelpCommand1></NativeHelpCommand1>
<CompileCommand2></CompileCommand2>
<RunCommand2></RunCommand2>
<GUIDesignerCommand2></GUIDesignerCommand2>
<ImportFiles2>#include &lt;stdio.h&gt;

void Startup();
</ImportFiles2>
<ProgramStartupCode2>int main(){
 Startup();
 %AppName%::Start();
 }
</ProgramStartupCode2>
<NativeHelpCommand2></NativeHelpCommand2>
<CompileCommand3></CompileCommand3>
<RunCommand3></RunCommand3>
<GUIDesignerCommand3>java -jar guidsin.jar -cpp</GUIDesignerCommand3>
<ImportFiles3>#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;math.h&gt;
#include &quot;Ekagen.h&quot;
void Startup();
</ImportFiles3>
<ProgramStartupCode3>void Emain(){
Startup();
%AppName%::Start();
}
</ProgramStartupCode3>
<NativeHelpCommand3></NativeHelpCommand3>
<MoveStep>8</MoveStep>
<ImageEditCommand>mtpaint</ImageEditCommand>
<CompilerFileName>javac.exe</CompilerFileName>
<CompileCommand4>./compile_vkeycontrol VKeyboardControl com example vkeyboard</CompileCommand4>
<RunCommand4>echo no action</RunCommand4>
<GUIDesignerCommand4>java -jar guidsin.jar -android</GUIDesignerCommand4>
<ImportFiles4>package com.example.test;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.widget.Button;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.widget.EditText;
import android.text.SpannableStringBuilder;
import android.text.TextWatcher;
import android.text.Editable;
import android.graphics.Matrix;
import android.graphics.Typeface;
import android.graphics.RectF;
import android.graphics.BitmapFactory;
import java.io.*;
 import java.net.*;
import java.util.*;
import java.text.SimpleDateFormat;
import android.media.MediaPlayer;
import android.os.Handler;
import android.content.res.Configuration;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.app.Activity;
import android.graphics.Color;

import android.widget.AbsoluteLayout;
import android.widget.*;
import android.view.Gravity;
import android.view.View.OnClickListener;
import android.hardware.Camera;
import android.media.AudioFormat;
import android.media.AudioRecord;
import android.media.MediaRecorder;
import android.media.AudioTrack;
import android.media.AudioManager;
import android.os.Environment;
import android.content.Intent;

public class HelloWorld extends Activity {
  %AppName% ap;

  @Override
  public void onCreate(Bundle bundle) {
    super.onCreate(bundle);
    ap = new %AppName%();
    ap.ACTIVITY = this;
    ap.Start();
   }

   @Override
    public void onStop(){
      if( ap != null ){
         try{
           ap.dbg.close();
         } catch(Exception e){}
         ap.save();
         ap.purge();
      }
      super.onStop();
      finish();
      System.exit(0);
    }

}

</ImportFiles4>
<ProgramStartupCode4>Activity ACTIVITY;
</ProgramStartupCode4>
<NativeHelpCommand4>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.test&quot;
    android:versionCode=&quot;1&quot;
    android:versionName=&quot;1.0&quot; &gt;

    
    
  &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.camera&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.usb.host&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;/&gt;
  &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;

  &lt;uses-sdk android:minSdkVersion=&quot;3&quot; android:targetSdkVersion=&quot;21&quot;/&gt;
  
 
    &lt;application android:label=&quot;@string/app_name&quot; &gt;
        &lt;activity
            android:name=&quot;HelloWorld&quot;
            android:label=&quot;@string/app_name&quot; &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</NativeHelpCommand4>
<HtmlEditCommand></HtmlEditCommand>
<CompileCommand5></CompileCommand5>
<RunCommand5></RunCommand5>
<GUIDesignerCommand5></GUIDesignerCommand5>
<ImportFiles5></ImportFiles5>
<ProgramStartupCode5>gosub @_PSTART
end
</ProgramStartupCode5>
<NativeHelpCommand5></NativeHelpCommand5>
<NoOptimizePin>0</NoOptimizePin>
<CompileCommand6>./compile_c</CompileCommand6>
<RunCommand6>./run_c</RunCommand6>
<GUIDesignerCommand6></GUIDesignerCommand6>
<ImportFiles6>#include &lt;setjmp.h&gt;
#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;math.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;

#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xutil.h&gt;
#include &lt;X11/Xlocale.h&gt; /* ロケール用ヘッダーファイル */
#include &lt;X11/xpm.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;termios.h&gt;
#include &lt;errno.h&gt;
</ImportFiles6>
<ProgramStartupCode6>int ARGC; char** ARGV;
int main( int argc, char** argv ){
  ARGC=argc;
  ARGV=argv;
  _PSTART();
}
</ProgramStartupCode6>
<NativeHelpCommand6></NativeHelpCommand6>
<CompileCommand7></CompileCommand7>
<RunCommand7>./run_startx</RunCommand7>
<GUIDesignerCommand7>java -jar guidsin.jar -ore</GUIDesignerCommand7>
<ImportFiles7></ImportFiles7>
<ProgramStartupCode7>main:
  _INIT_STATES
  goto _PSTART
</ProgramStartupCode7>
<NativeHelpCommand7></NativeHelpCommand7>
<IDF_LocalVariable5>%</IDF_LocalVariable5>
<IDF_LocalVariable7>\</IDF_LocalVariable7>
</プロパティ>
<codeclip>
<ID>_C124</ID>
<x0>619</x0>
<y0>434</y0>
<width>214</width>
<height>83</height>
<codetext>// デバッグオブジェクト
boolean debug_mode = false;
String DEBUG_FILE=&quot;debug.txt&quot;;
FileWriter dbg;
public void dprint(String s){

  if(debug_mode){
    try{
      dbg.write(s);
      dbg.flush();
    } catch(Exception e){}
  }
}
</codetext>
</codeclip>
<codeclip>
<ID>_C125</ID>
<x0>618</x0>
<y0>394</y0>
<width>204</width>
<height>36</height>
<codetext>// 表示を更新する
public void update_display(){

dprint(&quot;update display\n&quot;);

  handler.post(new Runnable() {
    @Override
    public void run() {
      seimon0.invalidate();
      seimon.invalidate();
      if( voice_no &lt; voice_template.size()){
        text.setText( ((VoiceTemplate)(voice_template.get(voice_no))).text );
        weight.setText( &quot;&quot;+((VoiceTemplate)(voice_template.get(voice_no))).weight );
        code.setText( &quot;&quot;+((VoiceTemplate)(voice_template.get(voice_no))).code );
      }
    }
  });
}
</codetext>
</codeclip>
<relation>
<ID>_R126</ID>
<pin1name>_A88(_PPseimon0)</pin1name>
<pin2name>_X92(_P20)</pin2name>
</relation>
<xobject>
<ID>_X_G130</ID>
<x0>651</x0>
<y0>524</y0>
<width>177</width>
<height>112</height>
<objectname>Setter</objectname>
<description></description>
<operation>
<ID>_O113</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>188</x0>
<y0>212</y0>
<width>131</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(TextView t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>30</inpiny0>
<inpinwidth>91</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>result = t;
</codetext>
</operation>
<pin>
<ID>_P133</ID>
<text>result_is(TextView t)</text>
<x0>7</x0>
<y0>238</y0>
<width>144</width>
<height>25</height>
<px>0</px>
<py>92</py>
</pin>
<relation>
<ID>_R134</ID>
<pin2name>_O113</pin2name>
<pin1name>_P133</pin1name>
</relation>
<ID_maker>160</ID_maker>
<pin>
<ID>_P144</ID>
<x0>6</x0>
<y0>163</y0>
<width>133</width>
<height>29</height>
<text>code_is(EditText e)</text>
<px>0</px>
<py>74</py>
</pin>
<operation>
<ID>_O145</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>192</x0>
<y0>143</y0>
<width>131</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>30</inpiny0>
<inpinwidth>91</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>code =e;
</codetext>
</operation>
<relation>
<ID>_R146</ID>
<pin1name>_P144</pin1name>
<pin2name>_O145</pin2name>
</relation>
<operation>
<ID>_O147</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>182</x0>
<y0>12</y0>
<width>148</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>text = t;
</codetext>
</operation>
<pin>
<ID>_P148</ID>
<x0>8</x0>
<y0>24</y0>
<width>128</width>
<height>31</height>
<text>text_is(EditText t)</text>
<px>0</px>
<py>36</py>
</pin>
<relation>
<ID>_R149</ID>
<pin1name>_P148</pin1name>
<pin2name>_O147</pin2name>
</relation>
<pin>
<ID>_P157</ID>
<x0>0</x0>
<y0>83</y0>
<width>130</width>
<height>29</height>
<text>weight_is(EditText t)</text>
<px>0</px>
<py>54</py>
</pin>
<operation>
<ID>_O158</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>185</x0>
<y0>77</y0>
<width>148</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>97</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>weight = t;
</codetext>
</operation>
<relation>
<ID>_R159</ID>
<pin1name>_P157</pin1name>
<pin2name>_O158</pin2name>
</relation>
</xobject>
<relation>
<ID>_R141</ID>
<pin1name>_A88(_Pcode)</pin1name>
<pin2name>_X_G130(_P144)</pin2name>
</relation>
<relation>
<ID>_R146</ID>
<pin1name>_A88(_PAins)</pin1name>
<pin2name>_X_G87(_P111)</pin2name>
</relation>
<relation>
<ID>_R147</ID>
<pin1name>_A88(_PAdel)</pin1name>
<pin2name>_X_G87(_P112)</pin2name>
</relation>
<codeclip>
<ID>_C148</ID>
<x0>382</x0>
<y0>4</y0>
<width>291</width>
<height>214</height>
<codetext>// 変数
Handler handler = new Handler();
TextView seimon;   // 録音した音声の声紋
TextView seimon0; // テンプレートの声紋
EditText text;      // テキスト表示
EditText weight;   // 重み(優先順位) 
EditText code;     // キーコード
TextView result;   // 認識結果の表示
double[] voice;      // 録音した音声
double[] hosei;      // 周波数補正係数
int voice_no = 0;  // 音声番号
int tsize = 0;       // テンプレートのサイズ
int bright = 0;     // 声紋表示の輝度調節
boolean is_running = false; // 実行中フラグ
</codetext>
</codeclip>
<pin>
<ID>_P149</ID>
<x0>678</x0>
<y0>355</y0>
<width>58</width>
<height>26</height>
<text>purge()</text>
<px>10</px>
<py>40</py>
</pin>
<relation>
<ID>_R150</ID>
<pin1name>_P149</pin1name>
<pin2name>_X_G87(_P113)</pin2name>
</relation>
<relation>
<ID>_R151</ID>
<pin1name>_A88(_PAbright)</pin1name>
<pin2name>_X92(_P29)</pin2name>
</relation>
<relation>
<ID>_R154</ID>
<pin1name>_A88(_Ptext)</pin1name>
<pin2name>_X_G130(_P148)</pin2name>
</relation>
<relation>
<ID>_R155</ID>
<pin1name>_A88(_Pseimon0)</pin1name>
<pin2name>_X92(_P34)</pin2name>
</relation>
<relation>
<ID>_R156</ID>
<pin1name>_A88(_Pseimon)</pin1name>
<pin2name>_X92(_P33)</pin2name>
</relation>
<relation>
<ID>_R157</ID>
<pin1name>_A88(_PAvoice_no)</pin1name>
<pin2name>_X92(_P2)</pin2name>
</relation>
<relation>
<ID>_R158</ID>
<pin1name>_A88(_Pweight)</pin1name>
<pin2name>_X_G130(_P157)</pin2name>
</relation>
<relation>
<ID>_R159</ID>
<pin1name>_A88(_PAlength)</pin1name>
<pin2name>_X92(_P41)</pin2name>
</relation>
<xobject>
<ID>_X160</ID>
<x0>9</x0>
<y0>281</y0>
<width>107</width>
<height>68</height>
<ID_maker>55</ID_maker>
<objectname>config</objectname>
<description></description>
<pin>
<ID>_P1</ID>
<x0>14</x0>
<y0>24</y0>
<width>109</width>
<height>26</height>
<text>start(Object l)</text>
<px>2</px>
<py>28</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>887</x0>
<y0>157</y0>
<width>60</width>
<height>30</height>
<text>config()</text>
<px>52</px>
<py>45</py>
</pin>
<operation>
<ID>_O5</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>142</x0>
<y0>3</y0>
<width>164</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(Object o)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>83</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>114</outpinx0>
<outpiny0>32</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// メインコンテナを取得



main_container = (AbsoluteLayout)o;
</codetext>
</operation>
<relation>
<ID>_R6</ID>
<pin1name>_P1</pin1name>
<pin2name>_O5</pin2name>
</relation>
<relation>
<ID>_R7</ID>
<pin1name>_O5</pin1name>
<pin2name>_A2(_Pstart)</pin2name>
</relation>
<codeclip>
<ID>_C8</ID>
<x0>36</x0>
<y0>306</y0>
<width>262</width>
<height>66</height>
<codetext>// コンテナ
AbsoluteLayout main_container;
AbsoluteLayout config_container;
AbsoluteLayout equalizer_container;
</codetext>
</codeclip>
<operation>
<ID>_O10</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>671</x0>
<y0>6</y0>
<width>164</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(Object o)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>83</inpinwidth>
<inpinheight>25</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>114</outpinx0>
<outpiny0>32</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// コンテナを取得



config_container = (AbsoluteLayout)o;
ACTIVITY.setContentView(main_container);
</codetext>
</operation>
<relation>
<ID>_R11</ID>
<pin1name>_A2(_PGUIout)</pin1name>
<pin2name>_O10</pin2name>
</relation>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>686</x0>
<y0>146</y0>
<width>171</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>118</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>43</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// データをセットして表示




  cflog_scale.setChecked(flog_scale);
  calog_scale.setChecked(alog_scale);
  cauto_learn.setChecked(auto_learn);
  cwritable.setChecked(writable);
  cstartup_time.setText(&quot;&quot; + startup_time);
  csound_filter.setText(&quot;&quot; + sound_filter);
  cthresh_trigger_on.setText(&quot;&quot; + thresh_trigger_on);
  cthresh_trigger_off.setText(&quot;&quot; + thresh_trigger_off);
  cthresh_count_on.setText(&quot;&quot; + thresh_count_on);
  cthresh_count_off.setText(&quot;&quot; + thresh_count_off);
  cthresh_recognize.setText(&quot;&quot; + thresh_recognize);
  cbias.setText(&quot;&quot; + bias);
  cacompress.setText(&quot;&quot; + acompress);
  clearn_param_o.setText(&quot;&quot; + learn_param_o);
  clearn_param_x.setText(&quot;&quot; + learn_param_x);
  climit_length.setText(&quot;&quot; + limit_length);
  cenhance.setText(&quot;&quot; + enhance);
  ACTIVITY.setContentView(config_container);
  
</codetext>
</operation>
<relation>
<ID>_R13</ID>
<pin1name>_P4</pin1name>
<pin2name>_O12</pin2name>
</relation>
<operation>
<ID>_O19</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>115</x0>
<y0>60</y0>
<width>174</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>126</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 変数をセットして閉じる


  flog_scale=cflog_scale.isChecked();
  alog_scale=calog_scale.isChecked();
  auto_learn=cauto_learn.isChecked();
  writable=cwritable.isChecked();
  startup_time=get_int(cstartup_time);
  sound_filter=get_double(csound_filter);
  thresh_trigger_on=get_double(cthresh_trigger_on);
  thresh_trigger_off=get_double(cthresh_trigger_off);
  thresh_count_on=get_int(cthresh_count_on);
  thresh_count_off=get_int(cthresh_count_off);
  thresh_recognize=get_double(cthresh_recognize);
  bias=get_double(cbias);
  acompress=get_double(cacompress);
  learn_param_o=get_double(clearn_param_o);
  learn_param_x=get_double(clearn_param_x);
  limit_length=get_double(climit_length);
  enhance=get_double(cenhance);

  ACTIVITY.setContentView(main_container);
  
</codetext>
</operation>
<relation>
<ID>_R20</ID>
<pin1name>_A2(_PAclose)</pin1name>
<pin2name>_O19</pin2name>
</relation>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>156</x0>
<y0>218</y0>
<width>121</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>70</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//データを消去


try{

  int cnt = 0;
  InputStream is = ACTIVITY.getResources().openRawResource(R.raw.voicedata);
  while (is.read()!=-1) cnt++;
  byte[] b = new byte[cnt];
  is.reset();
  is.read(b);
  is.close();
  FileOutputStream os = new FileOutputStream(voice_data_file);
  os.write(b);
  os.close();

String line = null;
BufferedReader din = new BufferedReader( new FileReader(voice_data_file));

// 変数を読み込む
while(true){
  if( ( line=din.readLine() ) == null ) return;
  if( line.equals( &quot;&quot; ) ) break;
  if( line.equals(&quot;debug_mode=true&quot;))         debug_mode=true;
  if( line.equals(&quot;debug_mode=false&quot;))        debug_mode=false;
  if( line.equals(&quot;flog_scale=true&quot;))         flog_scale=true;
  if( line.equals(&quot;flog_scale=false&quot;))        flog_scale=false;
  if( line.equals(&quot;alog_scale=true&quot;))         alog_scale=true;
  if( line.equals(&quot;alog_scale=false&quot;))        alog_scale=false;
  if( line.equals(&quot;auto_learn=true&quot;))         auto_learn=true;
  if( line.equals(&quot;auto_learn=false&quot;))        auto_learn=false;
  if( line.equals(&quot;writable=true&quot;))           writable=true;
  if( line.equals(&quot;writable=false&quot;))          writable=false;
  if( line.startsWith(&quot;startup_time=&quot;))       startup_time=Integer.parseInt(line.substring(13));
  if( line.startsWith(&quot;sound_filter=&quot;))       sound_filter=Double.parseDouble(line.substring(13));
  if( line.startsWith(&quot;thresh_trigger_on=&quot;))  thresh_trigger_on=Double.parseDouble(line.substring(18));
  if( line.startsWith(&quot;thresh_trigger_off=&quot;)) thresh_trigger_off=Double.parseDouble(line.substring(19));
  if( line.startsWith(&quot;thresh_count_on=&quot;))    thresh_count_on=Integer.parseInt(line.substring(16));
  if( line.startsWith(&quot;thresh_count_off=&quot;))   thresh_count_off=Integer.parseInt(line.substring(17));
  if( line.startsWith(&quot;thresh_recognize=&quot;))   thresh_recognize=Double.parseDouble(line.substring(17));
  if( line.startsWith(&quot;bias=&quot;))               bias=Double.parseDouble(line.substring(5));
  if( line.startsWith(&quot;acompress=&quot;))          acompress=Double.parseDouble(line.substring(10));
  if( line.startsWith(&quot;learn_param_o=&quot;))      learn_param_o=Double.parseDouble(line.substring(14));
  if( line.startsWith(&quot;learn_param_x=&quot;))      learn_param_x=Double.parseDouble(line.substring(14));
  if( line.startsWith(&quot;limit_length=&quot;))       limit_length=Double.parseDouble(line.substring(13));
  if( line.startsWith(&quot;enhance=&quot;))            enhance=Double.parseDouble(line.substring(8));
}

hosei = new double[HEARING_HEIGHT];
for(int i = 0; true; i++){
  if((line=din.readLine()) == null){din.close(); return;}
  if( line.equals( &quot;&quot; ) ) break;
  hosei[i%HEARING_HEIGHT] = Double.parseDouble(line);
}

// 音声データを読み込む
voice_template = new Vector();
while(true){
  if((line=din.readLine()) == null){din.close(); return;}
  if(line.equals(&quot;END&quot;)) break;
  String t = line;
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  double w = Double.parseDouble(line);
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  int c = Integer.parseInt(line);
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  int s = Integer.parseInt(line);
  double[] v = new double[s];
  for(int i = 0; i &lt; s; i++){
    if((line=din.readLine()) == null){din.close(); return;}
    v[i] = Double.parseDouble(line);
  }
  voice_template.add(new VoiceTemplate(t, w, c, v));
}

din.close();
} catch( Exception e ){ dprint(e+&quot;\n&quot;); }

voice_no = 0;
</codetext>
</operation>
<relation>
<ID>_R22</ID>
<pin1name>_A2(_PAclear)</pin1name>
<pin2name>_O21</pin2name>
</relation>
<operation>
<ID>_O23</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>83</x0>
<y0>117</y0>
<width>200</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>154</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// SDカードにバックアップする


//音声テンプレートを保存する

try{

  String line = null;
  int cnt = 0;
  BufferedWriter dout = new BufferedWriter( new FileWriter(voice_data_file) );
  
  // 変数を保存する
  dout.write(&quot;flog_scale=&quot; + flog_scale + &quot;\n&quot;);
  dout.write(&quot;alog_scale=&quot; + alog_scale + &quot;\n&quot;);
  dout.write(&quot;auto_learn=&quot; + auto_learn + &quot;\n&quot;);
  dout.write(&quot;writable=&quot; + writable + &quot;\n&quot;);
  dout.write(&quot;startup_time=&quot; + startup_time + &quot;\n&quot;);
  dout.write(&quot;sound_filter=&quot; + sound_filter + &quot;\n&quot;);
  dout.write(&quot;thresh_trigger_on=&quot; + thresh_trigger_on + &quot;\n&quot;);
  dout.write(&quot;thresh_trigger_off=&quot; + thresh_trigger_off + &quot;\n&quot;);
  dout.write(&quot;thresh_count_on=&quot; + thresh_count_on + &quot;\n&quot;);
  dout.write(&quot;thresh_count_off=&quot; + thresh_count_off + &quot;\n&quot;);
  dout.write(&quot;thresh_recognize=&quot; + thresh_recognize + &quot;\n&quot;);
  dout.write(&quot;bias=&quot; + bias + &quot;\n&quot;);
  dout.write(&quot;acompress=&quot; + acompress + &quot;\n&quot;);
  dout.write(&quot;learn_param_o=&quot; + learn_param_o + &quot;\n&quot;);
  dout.write(&quot;learn_param_x=&quot; + learn_param_x + &quot;\n&quot;);
  dout.write(&quot;limit_length=&quot; + limit_length + &quot;\n&quot;);
  dout.write(&quot;enhance=&quot; + enhance + &quot;\n&quot;);
  dout.write(&quot;\n&quot;);

  for(int i = 0; i &lt; HEARING_HEIGHT; i++){
    dout.write(hosei[i] + &quot;\n&quot;);
  }
  dout.write(&quot;\n&quot;);
  
  // 音声データを保存する
  for( int i = 0; i &lt; voice_template.size(); i++ ){
    dout.write(((VoiceTemplate)voice_template.get(i)).text + &quot;\n&quot; );
    dout.write(((VoiceTemplate)voice_template.get(i)).weight + &quot;\n&quot; );
    dout.write(((VoiceTemplate)voice_template.get(i)).code + &quot;\n&quot; );
    double[] v = ((VoiceTemplate)(voice_template.get(i))).voice;
    dout.write(v.length + &quot;\n&quot;);
    for (int j = 0; j &lt;  v.length; j++){
      dout.write(v[j] + &quot;\n&quot;);
    }
  }
  dout.write(&quot;END\n&quot;);
  dout.close();

  // バックアップファイルにコピーする
  FileInputStream is = new FileInputStream(voice_data_file);;
  while (is.read()!=-1) cnt++;
  byte[] b = new byte[cnt];
  is.reset();
  is.read(b);
  is.close();
  FileOutputStream os = new FileOutputStream(backup_file);
  os.write(b);
  os.close();

} catch( Exception e ){dprint(e+&quot;\n&quot;);}
</codetext>
</operation>
<relation>
<ID>_R24</ID>
<pin1name>_A2(_PAbackup)</pin1name>
<pin2name>_O23</pin2name>
</relation>
<operation>
<ID>_O25</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>50</x0>
<y0>167</y0>
<width>230</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>179</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//バックアップしたデータを呼び出す


try{
  String line = null;
  int cnt = 0;

  // バックアップファイルからコピーする
  FileInputStream is = new FileInputStream(backup_file);;
  while (is.read()!=-1) cnt++;
  byte[] b = new byte[cnt];
  is.reset();
  is.read(b);
  is.close();
  FileOutputStream os = new FileOutputStream(voice_data_file);
  os.write(b);
  os.close();



BufferedReader din = new BufferedReader( new FileReader(voice_data_file));

// 変数を読み込む
while(true){
  if( ( line=din.readLine() ) == null ) return;
  if( line.equals( &quot;&quot; ) ) break;
  if( line.equals(&quot;debug_mode=true&quot;))         debug_mode=true;
  if( line.equals(&quot;debug_mode=false&quot;))        debug_mode=false;
  if( line.equals(&quot;flog_scale=true&quot;))         flog_scale=true;
  if( line.equals(&quot;flog_scale=false&quot;))        flog_scale=false;
  if( line.equals(&quot;alog_scale=true&quot;))         alog_scale=true;
  if( line.equals(&quot;alog_scale=false&quot;))        alog_scale=false;
  if( line.equals(&quot;auto_learn=true&quot;))         auto_learn=true;
  if( line.equals(&quot;auto_learn=false&quot;))        auto_learn=false;
  if( line.equals(&quot;writable=true&quot;))           writable=true;
  if( line.equals(&quot;writable=false&quot;))          writable=false;
  if( line.startsWith(&quot;startup_time=&quot;))       startup_time=Integer.parseInt(line.substring(13));
  if( line.startsWith(&quot;sound_filter=&quot;))       sound_filter=Double.parseDouble(line.substring(13));
  if( line.startsWith(&quot;thresh_trigger_on=&quot;))  thresh_trigger_on=Double.parseDouble(line.substring(18));
  if( line.startsWith(&quot;thresh_trigger_off=&quot;)) thresh_trigger_off=Double.parseDouble(line.substring(19));
  if( line.startsWith(&quot;thresh_count_on=&quot;))    thresh_count_on=Integer.parseInt(line.substring(16));
  if( line.startsWith(&quot;thresh_count_off=&quot;))   thresh_count_off=Integer.parseInt(line.substring(17));
  if( line.startsWith(&quot;thresh_recognize=&quot;))   thresh_recognize=Double.parseDouble(line.substring(17));
  if( line.startsWith(&quot;bias=&quot;))               bias=Double.parseDouble(line.substring(5));
  if( line.startsWith(&quot;acompress=&quot;))          acompress=Double.parseDouble(line.substring(10));
  if( line.startsWith(&quot;learn_param_o=&quot;))      learn_param_o=Double.parseDouble(line.substring(14));
  if( line.startsWith(&quot;learn_param_x=&quot;))      learn_param_x=Double.parseDouble(line.substring(14));
  if( line.startsWith(&quot;limit_length=&quot;))       limit_length=Double.parseDouble(line.substring(13));
  if( line.startsWith(&quot;enhance=&quot;))            enhance=Double.parseDouble(line.substring(8));
}

hosei = new double[HEARING_HEIGHT];
for(int i = 0; true; i++){
  if((line=din.readLine()) == null){din.close(); return;}
  if( line.equals( &quot;&quot; ) ) break;
  hosei[i%HEARING_HEIGHT] = Double.parseDouble(line);
}

// 音声データを読み込む
voice_template = new Vector();
while(true){
  if((line=din.readLine()) == null){din.close(); return;}
  if(line.equals(&quot;END&quot;)) break;
  String t = line;
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  double w = Double.parseDouble(line);
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  int c = Integer.parseInt(line);
  if( ( line=din.readLine() ) == null ){din.close(); return;}
  int s = Integer.parseInt(line);
  double[] v = new double[s];
  for(int i = 0; i &lt; s; i++){
    if((line=din.readLine()) == null){din.close(); return;}
    v[i] = Double.parseDouble(line);
  }
  voice_template.add(new VoiceTemplate(t, w, c, v));
}

din.close();
} catch( Exception e ){ dprint(e+&quot;\n&quot;); }

voice_no = 0;
</codetext>
</operation>
<relation>
<ID>_R26</ID>
<pin1name>_A2(_PArestore)</pin1name>
<pin2name>_O25</pin2name>
</relation>
<codeclip>
<ID>_C29</ID>
<x0>341</x0>
<y0>12</y0>
<width>297</width>
<height>36</height>
<codetext>// バックアップファイル
File backup_file = new File( Environment.getExternalStorageDirectory(),&quot;VKeyboaed.bak&quot; );
</codetext>
</codeclip>
<xobject>
<ID>_X30</ID>
<x0>676</x0>
<y0>63</y0>
<width>165</width>
<height>76</height>
<ID_maker>26</ID_maker>
<objectname>Equalizer</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>12</x0>
<y0>176</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>11</px>
<py>33</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>276</x0>
<y0>477</y0>
<width>79</width>
<height>31</height>
<text>equalizer()</text>
<px>7</px>
<py>51</py>
</pin>
<relation>
<ID>_R3</ID>
<pin1name>_P0</pin1name>
<pin2name>_A2(_Pstart)</pin2name>
</relation>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>429</x0>
<y0>135</y0>
<width>149</width>
<height>54</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(Object o)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>82</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//  コンテナをセット



equalizer_container = (AbsoluteLayout)o;
</codetext>
</operation>
<relation>
<ID>_R5</ID>
<pin1name>_A2(_PGUIout)</pin1name>
<pin2name>_O4</pin2name>
</relation>
<operation>
<ID>_O6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>433</x0>
<y0>456</y0>
<width>150</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// イコライザを表示


double a = 0;
int i=1;
a=0;
for(int j=1; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e0.setProgress((int)(a/(HEARING_HEIGHT/8-1)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e1.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e2.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e3.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e4.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e5.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e6.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
a=0;
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
a+=hosei[i];
}
e7.setProgress((int)(a/(HEARING_HEIGHT/8)*100));
ACTIVITY.setContentView(equalizer_container);
</codetext>
</operation>
<relation>
<ID>_R7</ID>
<pin1name>_P1</pin1name>
<pin2name>_O6</pin2name>
</relation>
<operation>
<ID>_O8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>431</x0>
<y0>396</y0>
<width>150</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// イコライザを非表示


hosei[0]=0;
int i=1;
for(int j=1; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e0.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e1.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e2.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e3.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e4.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e5.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e6.getProgress()/100;
}
for(int j=0; j&lt;HEARING_HEIGHT/8;i++, j++){
hosei[i] = (double)e7.getProgress()/100;
}
ACTIVITY.setContentView(config_container);
</codetext>
</operation>
<relation>
<ID>_R10</ID>
<pin1name>_A2(_PAclose)</pin1name>
<pin2name>_O8</pin2name>
</relation>
<xobject>
<ID>_X11</ID>
<x0>439</x0>
<y0>205</y0>
<width>139</width>
<height>177</height>
<ID_maker>24</ID_maker>
<objectname>setter</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>18</x0>
<y0>33</y0>
<width>123</width>
<height>26</height>
<text>e0_is(SeekBar b)</text>
<px>0</px>
<py>31</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>19</x0>
<y0>100</y0>
<width>123</width>
<height>26</height>
<text>e1_is(SeekBar b)</text>
<px>1</px>
<py>49</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>18</x0>
<y0>176</y0>
<width>123</width>
<height>26</height>
<text>e2_is(SeekBar b)</text>
<px>0</px>
<py>67</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>18</x0>
<y0>248</y0>
<width>123</width>
<height>26</height>
<text>e3_is(SeekBar b)</text>
<px>0</px>
<py>85</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>18</x0>
<y0>319</y0>
<width>123</width>
<height>26</height>
<text>e4_is(SeekBar b)</text>
<px>0</px>
<py>103</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>23</x0>
<y0>392</y0>
<width>123</width>
<height>26</height>
<text>e5_is(SeekBar b)</text>
<px>0</px>
<py>121</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>22</x0>
<y0>470</y0>
<width>123</width>
<height>26</height>
<text>e6_is(SeekBar b)</text>
<px>0</px>
<py>139</py>
</pin>
<pin>
<ID>_P7</ID>
<x0>23</x0>
<y0>550</y0>
<width>123</width>
<height>26</height>
<text>e7_is(SeekBar b)</text>
<px>0</px>
<py>157</py>
</pin>
<operation>
<ID>_O8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>178</x0>
<y0>6</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e0=b;
</codetext>
</operation>
<relation>
<ID>_R9</ID>
<pin1name>_P0</pin1name>
<pin2name>_O8</pin2name>
</relation>
<operation>
<ID>_O10</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>178</x0>
<y0>84</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e1=b;
</codetext>
</operation>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>175</x0>
<y0>159</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e2=b;
</codetext>
</operation>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>177</x0>
<y0>228</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e3=b;
</codetext>
</operation>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>182</x0>
<y0>303</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e4=b;
</codetext>
</operation>
<operation>
<ID>_O14</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>373</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e5=b;
</codetext>
</operation>
<operation>
<ID>_O15</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>180</x0>
<y0>456</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e6=b;
</codetext>
</operation>
<operation>
<ID>_O16</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>180</x0>
<y0>539</y0>
<width>120</width>
<height>57</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(SeekBar b)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>36</inpiny0>
<inpinwidth>99</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>e7=b;
</codetext>
</operation>
<relation>
<ID>_R17</ID>
<pin1name>_P1</pin1name>
<pin2name>_O10</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_P2</pin1name>
<pin2name>_O11</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_P4</pin1name>
<pin2name>_O13</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_P3</pin1name>
<pin2name>_O12</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_P5</pin1name>
<pin2name>_O14</pin2name>
</relation>
<relation>
<ID>_R22</ID>
<pin1name>_P6</pin1name>
<pin2name>_O15</pin2name>
</relation>
<relation>
<ID>_R23</ID>
<pin1name>_P7</pin1name>
<pin2name>_O16</pin2name>
</relation>
</xobject>
<relation>
<ID>_R12</ID>
<pin1name>_A2(_Pe0)</pin1name>
<pin2name>_X11(_P0)</pin2name>
</relation>
<relation>
<ID>_R13</ID>
<pin1name>_A2(_Pe1)</pin1name>
<pin2name>_X11(_P1)</pin2name>
</relation>
<relation>
<ID>_R14</ID>
<pin1name>_A2(_Pe2)</pin1name>
<pin2name>_X11(_P2)</pin2name>
</relation>
<relation>
<ID>_R15</ID>
<pin1name>_A2(_Pe3)</pin1name>
<pin2name>_X11(_P3)</pin2name>
</relation>
<relation>
<ID>_R19</ID>
<pin1name>_A2(_Pe4)</pin1name>
<pin2name>_X11(_P4)</pin2name>
</relation>
<relation>
<ID>_R20</ID>
<pin1name>_A2(_Pe5)</pin1name>
<pin2name>_X11(_P5)</pin2name>
</relation>
<relation>
<ID>_R21</ID>
<pin1name>_A2(_Pe6)</pin1name>
<pin2name>_X11(_P6)</pin2name>
</relation>
<relation>
<ID>_R22</ID>
<pin1name>_A2(_Pe7)</pin1name>
<pin2name>_X11(_P7)</pin2name>
</relation>
<codeclip>
<ID>_C23</ID>
<x0>304</x0>
<y0>16</y0>
<width>224</width>
<height>34</height>
<codetext>// イコライザ用のシークバー
SeekBar e0,e1,e2,e3,e4,e5,e6,e7;
</codetext>
</codeclip>
<operation>
<ID>_O24</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>298</x0>
<y0>83</y0>
<width>164</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// メインコンテナを表示


ACTIVITY.setContentView(main_container);
</codetext>
</operation>
<relation>
<ID>_R25</ID>
<pin1name>_A2(_Pstart)</pin1name>
<pin2name>_O24</pin2name>
</relation>
<aobject>
<ID>_A2</ID>
<x0>120</x0>
<y0>164</y0>
<width>280</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(AbsoluteLayout l)</text>
<px>0</px>
<py>54</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// GUIを作成する
XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_Pe0</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>e0_created(SeekBar b)</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_Pe1</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>e1_created(SeekBar b)</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_Pe2</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>e2_created(SeekBar b)</text>
<px>0</px>
<py>108</py>
</pin>
<pin>
<ID>_Pe3</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>e3_created(SeekBar b)</text>
<px>0</px>
<py>126</py>
</pin>
<pin>
<ID>_Pe4</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>e4_created(SeekBar b)</text>
<px>0</px>
<py>144</py>
</pin>
<pin>
<ID>_Pe5</ID>
<x0>0</x0>
<y0>250</y0>
<width>200</width>
<height>26</height>
<text>e5_created(SeekBar b)</text>
<px>0</px>
<py>162</py>
</pin>
<pin>
<ID>_Pe6</ID>
<x0>0</x0>
<y0>278</y0>
<width>200</width>
<height>26</height>
<text>e6_created(SeekBar b)</text>
<px>0</px>
<py>180</py>
</pin>
<pin>
<ID>_Pe7</ID>
<x0>0</x0>
<y0>306</y0>
<width>200</width>
<height>26</height>
<text>e7_created(SeekBar b)</text>
<px>0</px>
<py>198</py>
</pin>
<pin>
<ID>_PAclose</ID>
<x0>0</x0>
<y0>334</y0>
<width>200</width>
<height>26</height>
<text>close_clicked()</text>
<px>0</px>
<py>216</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI{
LABEL0 ILABEL0;
 class LABEL0 extends TextView{
 LABEL0(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 30f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 254, 254, 254 ));
 setText( &quot;EQUALIZER&quot; );
}
}
e0 Ie0;
 class e0 extends SeekBar{
 e0(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e0_created( this );
}
}
e1 Ie1;
 class e1 extends SeekBar{
 e1(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e1_created( this );
}
}
e2 Ie2;
 class e2 extends SeekBar{
 e2(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e2_created( this );
}
}
e3 Ie3;
 class e3 extends SeekBar{
 e3(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e3_created( this );
}
}
e4 Ie4;
 class e4 extends SeekBar{
 e4(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e4_created( this );
}
}
e5 Ie5;
 class e5 extends SeekBar{
 e5(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e5_created( this );
}
}
e6 Ie6;
 class e6 extends SeekBar{
 e6(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e6_created( this );
}
}
e7 Ie7;
 class e7 extends SeekBar{
 e7(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setProgress( 0 );
 setMax( 100 );
 e7_created( this );
}
}
close Iclose;
 class close extends Button{
 close(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;X&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {close_clicked();}} );
}
}
 XGUI(){
 AbsoluteLayout layout=new AbsoluteLayout(ACTIVITY);
layout.setBackgroundColor(Color.rgb( 210, 252, 253));
ACTIVITY.setContentView(layout);
ACTIVITY.setTitle(&quot;VKeyboard設定&quot;);
 ILABEL0 = new LABEL0();
 ILABEL0.setLayoutParams( new AbsoluteLayout.LayoutParams( 562,88,0,8 ) );
 layout.addView( ILABEL0 );
 Ie0 = new e0();
 Ie0.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,66,2,112 ) );
 layout.addView( Ie0 );
 Ie1 = new e1();
 Ie1.setLayoutParams( new AbsoluteLayout.LayoutParams( 672,72,0,194 ) );
 layout.addView( Ie1 );
 Ie2 = new e2();
 Ie2.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,74,0,282 ) );
 layout.addView( Ie2 );
 Ie3 = new e3();
 Ie3.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,72,0,370 ) );
 layout.addView( Ie3 );
 Ie4 = new e4();
 Ie4.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,66,0,458 ) );
 layout.addView( Ie4 );
 Ie5 = new e5();
 Ie5.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,68,0,544 ) );
 layout.addView( Ie5 );
 Ie6 = new e6();
 Ie6.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,66,0,630 ) );
 layout.addView( Ie6 );
 Ie7 = new e7();
 Ie7.setLayoutParams( new AbsoluteLayout.LayoutParams( 674,74,0,714 ) );
 layout.addView( Ie7 );
 Iclose = new close();
 Iclose.setLayoutParams( new AbsoluteLayout.LayoutParams( 96,98,570,0 ) );
 layout.addView( Iclose );
 GUI_created( layout );
}
}
</codetext>
</codeclip>
<ID_maker>29</ID_maker>
<height>238</height>
<レイアウト>VKeyboard設定
335
400
210
252
253
xxscale=2
LABEL;LABEL0;EQUALIZER;0;4;281;44;51;51;51;254;254;254;Dialog;30;null;0;0;1;0;0;TextView;
HSLIDER;e0;0;100;1;56;337;33;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e1;0;100;0;97;336;36;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e2;0;100;0;141;337;37;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e3;0;100;0;185;337;36;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e4;0;100;0;229;337;33;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e5;0;100;0;272;337;34;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e6;0;100;0;315;337;33;163;184;204;255;255;255;1;1;0;SeekBar;
HSLIDER;e7;0;100;0;357;337;37;163;184;204;255;255;255;1;1;0;SeekBar;
BUTTON;close;X;285;0;48;49;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;Button;
</レイアウト>
</aobject>
</xobject>
<relation>
<ID>_R31</ID>
<pin1name>_A2(_Pstart)</pin1name>
<pin2name>_X30(_P0)</pin2name>
</relation>
<relation>
<ID>_R32</ID>
<pin1name>_A2(_PAequalizer)</pin1name>
<pin2name>_X30(_P1)</pin2name>
</relation>
<xobject>
<ID>_X33</ID>
<x0>668</x0>
<y0>207</y0>
<width>313</width>
<height>356</height>
<ID_maker>52</ID_maker>
<objectname>setter</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>22</x0>
<y0>29</y0>
<width>248</width>
<height>25</height>
<text>cflog_scale_created(CheckBox c)</text>
<px>0</px>
<py>34</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>24</x0>
<y0>58</y0>
<width>224</width>
<height>27</height>
<text>calog_scale_created(CheckBox c)</text>
<px>0</px>
<py>54</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>21</x0>
<y0>97</y0>
<width>228</width>
<height>25</height>
<text>csound_filter_created(EditText e)</text>
<px>0</px>
<py>111</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>27</x0>
<y0>132</y0>
<width>231</width>
<height>26</height>
<text>cstartup_time_created(EditText e)</text>
<px>0</px>
<py>128</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>20</x0>
<y0>166</y0>
<width>256</width>
<height>27</height>
<text>cthresh_trigger_on_created(EditText e)</text>
<px>0</px>
<py>148</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>10</x0>
<y0>203</y0>
<width>289</width>
<height>29</height>
<text>cthresh_trigger_off_created(EditText e)</text>
<px>0</px>
<py>166</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>22</x0>
<y0>249</y0>
<width>262</width>
<height>30</height>
<text>cthresh_count_on_created(EditText e)</text>
<px>2</px>
<py>184</py>
</pin>
<pin>
<ID>_P7</ID>
<x0>21</x0>
<y0>295</y0>
<width>254</width>
<height>29</height>
<text>cthresh_count_off_created(EditText e)</text>
<px>0</px>
<py>203</py>
</pin>
<pin>
<ID>_P8</ID>
<x0>21</x0>
<y0>335</y0>
<width>262</width>
<height>30</height>
<text>cthresh_recognize_created(EditText e)</text>
<px>0</px>
<py>224</py>
</pin>
<pin>
<ID>_P9</ID>
<x0>10</x0>
<y0>410</y0>
<width>191</width>
<height>29</height>
<text>cbias_created(EditText e)</text>
<px>0</px>
<py>242</py>
</pin>
<pin>
<ID>_P10</ID>
<x0>8</x0>
<y0>448</y0>
<width>204</width>
<height>25</height>
<text>cacompress_created(EditText e)</text>
<px>0</px>
<py>261</py>
</pin>
<pin>
<ID>_P11</ID>
<x0>8</x0>
<y0>479</y0>
<width>229</width>
<height>26</height>
<text>clearn_param_o_created(EditText e)</text>
<px>0</px>
<py>278</py>
</pin>
<pin>
<ID>_P12</ID>
<x0>19</x0>
<y0>373</y0>
<width>221</width>
<height>27</height>
<text>climit_length_created(EditText e)</text>
<px>0</px>
<py>311</py>
</pin>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>290</x0>
<y0>6</y0>
<width>135</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(CheckBox c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>100</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cflog_scale=c;
</codetext>
</operation>
<relation>
<ID>_R14</ID>
<pin1name>_P0</pin1name>
<pin2name>_O13</pin2name>
</relation>
<operation>
<ID>_O15</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>479</x0>
<y0>32</y0>
<width>135</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(CheckBox c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>100</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>calog_scale=c;
</codetext>
</operation>
<relation>
<ID>_R16</ID>
<pin1name>_P1</pin1name>
<pin2name>_O15</pin2name>
</relation>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>284</x0>
<y0>80</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>csound_filter=e;
</codetext>
</operation>
<relation>
<ID>_R18</ID>
<pin1name>_P2</pin1name>
<pin2name>_O17</pin2name>
</relation>
<operation>
<ID>_O19</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>472</x0>
<y0>105</y0>
<width>199</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cstartup_time=e;
</codetext>
</operation>
<relation>
<ID>_R20</ID>
<pin1name>_P3</pin1name>
<pin2name>_O19</pin2name>
</relation>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>683</x0>
<y0>133</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cthresh_trigger_on=e;
</codetext>
</operation>
<relation>
<ID>_R22</ID>
<pin1name>_P4</pin1name>
<pin2name>_O21</pin2name>
</relation>
<operation>
<ID>_O23</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>320</x0>
<y0>182</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cthresh_trigger_off=e;
</codetext>
</operation>
<relation>
<ID>_R24</ID>
<pin1name>_P5</pin1name>
<pin2name>_O23</pin2name>
</relation>
<operation>
<ID>_O25</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>524</x0>
<y0>220</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cthresh_count_on=e;
</codetext>
</operation>
<relation>
<ID>_R26</ID>
<pin1name>_P6</pin1name>
<pin2name>_O25</pin2name>
</relation>
<operation>
<ID>_O27</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>725</x0>
<y0>260</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cthresh_count_off=e;
</codetext>
</operation>
<relation>
<ID>_R28</ID>
<pin1name>_P7</pin1name>
<pin2name>_O27</pin2name>
</relation>
<operation>
<ID>_O29</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>323</x0>
<y0>314</y0>
<width>185</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cthresh_recognize=e;
</codetext>
</operation>
<relation>
<ID>_R30</ID>
<pin1name>_P8</pin1name>
<pin2name>_O29</pin2name>
</relation>
<operation>
<ID>_O31</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>522</x0>
<y0>344</y0>
<width>177</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>climit_length=e;
</codetext>
</operation>
<relation>
<ID>_R32</ID>
<pin1name>_P12</pin1name>
<pin2name>_O31</pin2name>
</relation>
<operation>
<ID>_O34</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>716</x0>
<y0>372</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cbias=e;
</codetext>
</operation>
<relation>
<ID>_R35</ID>
<pin1name>_P9</pin1name>
<pin2name>_O34</pin2name>
</relation>
<operation>
<ID>_O36</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>329</x0>
<y0>429</y0>
<width>165</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>25</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cacompress=e;
</codetext>
</operation>
<relation>
<ID>_R37</ID>
<pin1name>_P10</pin1name>
<pin2name>_O36</pin2name>
</relation>
<operation>
<ID>_O38</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>522</x0>
<y0>454</y0>
<width>174</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>clearn_param_o=e;
</codetext>
</operation>
<relation>
<ID>_R39</ID>
<pin1name>_P11</pin1name>
<pin2name>_O38</pin2name>
</relation>
<pin>
<ID>_P40</ID>
<x0>6</x0>
<y0>514</y0>
<width>237</width>
<height>24</height>
<text>clearn_param_x_created(EditText e)</text>
<px>0</px>
<py>295</py>
</pin>
<pin>
<ID>_P41</ID>
<x0>3</x0>
<y0>546</y0>
<width>225</width>
<height>25</height>
<text>cauto_learn_created(CheckBox c)</text>
<px>3</px>
<py>72</py>
</pin>
<operation>
<ID>_O42</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>716</x0>
<y0>480</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>clearn_param_x=e;
</codetext>
</operation>
<relation>
<ID>_R43</ID>
<pin1name>_P40</pin1name>
<pin2name>_O42</pin2name>
</relation>
<operation>
<ID>_O44</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>341</x0>
<y0>536</y0>
<width>126</width>
<height>44</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(CheckBox c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>98</inpinwidth>
<inpinheight>17</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cauto_learn=c;
</codetext>
</operation>
<relation>
<ID>_R45</ID>
<pin1name>_P41</pin1name>
<pin2name>_O44</pin2name>
</relation>
<pin>
<ID>_P46</ID>
<x0>0</x0>
<y0>579</y0>
<width>209</width>
<height>23</height>
<text>cenhance_created(EditText e)</text>
<px>0</px>
<py>328</py>
</pin>
<operation>
<ID>_O47</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>502</x0>
<y0>555</y0>
<width>182</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(EditText e)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>106</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cenhance=e;
</codetext>
</operation>
<relation>
<ID>_R48</ID>
<pin1name>_P46</pin1name>
<pin2name>_O47</pin2name>
</relation>
<operation>
<ID>_O49</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>746</x0>
<y0>582</y0>
<width>135</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(CheckBox c)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>100</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cwritable=c;
</codetext>
</operation>
<pin>
<ID>_P50</ID>
<x0>0</x0>
<y0>610</y0>
<width>211</width>
<height>22</height>
<text>cwritable_created(CheckBox c)</text>
<px>0</px>
<py>92</py>
</pin>
<relation>
<ID>_R51</ID>
<pin1name>_P50</pin1name>
<pin2name>_O49</pin2name>
</relation>
</xobject>
<relation>
<ID>_R34</ID>
<pin1name>_A2(_Pcflog_scale)</pin1name>
<pin2name>_X33(_P0)</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_A2(_Pcalog_scale)</pin1name>
<pin2name>_X33(_P1)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_A2(_Pcsound_filter)</pin1name>
<pin2name>_X33(_P2)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_A2(_Pcstartup_time)</pin1name>
<pin2name>_X33(_P3)</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_A2(_Pcthresh_trigger_on)</pin1name>
<pin2name>_X33(_P4)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A2(_Pcthresh_trigger_off)</pin1name>
<pin2name>_X33(_P5)</pin2name>
</relation>
<relation>
<ID>_R40</ID>
<pin1name>_A2(_Pcthresh_count_on)</pin1name>
<pin2name>_X33(_P6)</pin2name>
</relation>
<relation>
<ID>_R41</ID>
<pin1name>_A2(_Pcthresh_count_off)</pin1name>
<pin2name>_X33(_P7)</pin2name>
</relation>
<relation>
<ID>_R42</ID>
<pin1name>_A2(_Pcthresh_recognize)</pin1name>
<pin2name>_X33(_P8)</pin2name>
</relation>
<relation>
<ID>_R43</ID>
<pin1name>_A2(_Pcbias)</pin1name>
<pin2name>_X33(_P9)</pin2name>
</relation>
<relation>
<ID>_R44</ID>
<pin1name>_A2(_Pcacompress)</pin1name>
<pin2name>_X33(_P10)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_A2(_Pclimit_length)</pin1name>
<pin2name>_X33(_P12)</pin2name>
</relation>
<codeclip>
<ID>_C47</ID>
<x0>38</x0>
<y0>375</y0>
<width>254</width>
<height>259</height>
<codetext>//各パラメータ
CheckBox cflog_scale;
CheckBox calog_scale;
CheckBox cauto_learn;
CheckBox cwritable;
EditText csound_filter;
EditText cstartup_time;
EditText cthresh_trigger_on;
EditText cthresh_trigger_off;
EditText cthresh_count_on;
EditText cthresh_count_off;
EditText cthresh_recognize;
EditText cbias;
EditText cacompress;
EditText clearn_param_o;
EditText clearn_param_x;
EditText climit_length;
EditText cenhance;
</codetext>
</codeclip>
<codeclip>
<ID>_C48</ID>
<x0>42</x0>
<y0>270</y0>
<width>223</width>
<height>32</height>
<codetext>  // EditTextから数値を得る
  public int get_int( EditText e ){
    return Integer.parseInt( get_text(e) ); 
  }

  // EditTextから数値を得る
  public double get_double( EditText e ){
    return Double.parseDouble( get_text(e) ); 
  }

  // EditTextから文字列を得る
  public String get_text( EditText e ){
    return ((SpannableStringBuilder)e.getText()).toString(); 
  }

</codetext>
</codeclip>
<relation>
<ID>_R49</ID>
<pin1name>_A2(_Pclearn_param_o)</pin1name>
<pin2name>_X33(_P11)</pin2name>
</relation>
<relation>
<ID>_R50</ID>
<pin1name>_A2(_Pclearn_param_x)</pin1name>
<pin2name>_X33(_P40)</pin2name>
</relation>
<relation>
<ID>_R51</ID>
<pin1name>_A2(_Pcauto_learn)</pin1name>
<pin2name>_X33(_P41)</pin2name>
</relation>
<relation>
<ID>_R53</ID>
<pin1name>_A2(_Pcenhance)</pin1name>
<pin2name>_X33(_P46)</pin2name>
</relation>
<aobject>
<ID>_A2</ID>
<x0>348</x0>
<y0>81</y0>
<width>295</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(AbsoluteLayout l)</text>
<px>0</px>
<py>54</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// GUIを作成する
XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_PAequalizer</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>equalizer_clicked()</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_PAclose</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>close_clicked()</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_PAbackup</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>backup_clicked()</text>
<px>0</px>
<py>108</py>
</pin>
<pin>
<ID>_PArestore</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>restore_clicked()</text>
<px>0</px>
<py>126</py>
</pin>
<pin>
<ID>_PAclear</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>clear_clicked()</text>
<px>0</px>
<py>144</py>
</pin>
<pin>
<ID>_Pcflog_scale</ID>
<x0>0</x0>
<y0>250</y0>
<width>200</width>
<height>26</height>
<text>cflog_scale_created(CheckBox c)</text>
<px>0</px>
<py>162</py>
</pin>
<pin>
<ID>_Pcalog_scale</ID>
<x0>0</x0>
<y0>278</y0>
<width>200</width>
<height>26</height>
<text>calog_scale_created(CheckBox c)</text>
<px>0</px>
<py>180</py>
</pin>
<pin>
<ID>_Pcauto_learn</ID>
<x0>0</x0>
<y0>306</y0>
<width>200</width>
<height>26</height>
<text>cauto_learn_created(CheckBox c)</text>
<px>0</px>
<py>198</py>
</pin>
<pin>
<ID>_Pcwritable</ID>
<x0>0</x0>
<y0>334</y0>
<width>200</width>
<height>26</height>
<text>cwritable_created(CheckBox c)</text>
<px>0</px>
<py>216</py>
</pin>
<pin>
<ID>_Pcsound_filter</ID>
<x0>0</x0>
<y0>362</y0>
<width>200</width>
<height>26</height>
<text>csound_filter_created(EditText e)</text>
<px>0</px>
<py>234</py>
</pin>
<pin>
<ID>_Pcstartup_time</ID>
<x0>0</x0>
<y0>390</y0>
<width>200</width>
<height>26</height>
<text>cstartup_time_created(EditText e)</text>
<px>0</px>
<py>252</py>
</pin>
<pin>
<ID>_Pcthresh_trigger_on</ID>
<x0>0</x0>
<y0>418</y0>
<width>200</width>
<height>26</height>
<text>cthresh_trigger_on_created(EditText e)</text>
<px>0</px>
<py>270</py>
</pin>
<pin>
<ID>_Pcthresh_trigger_off</ID>
<x0>0</x0>
<y0>446</y0>
<width>200</width>
<height>26</height>
<text>cthresh_trigger_off_created(EditText e)</text>
<px>0</px>
<py>288</py>
</pin>
<pin>
<ID>_Pcthresh_count_on</ID>
<x0>0</x0>
<y0>474</y0>
<width>200</width>
<height>26</height>
<text>cthresh_count_on_created(EditText e)</text>
<px>0</px>
<py>306</py>
</pin>
<pin>
<ID>_Pcthresh_count_off</ID>
<x0>0</x0>
<y0>502</y0>
<width>200</width>
<height>26</height>
<text>cthresh_count_off_created(EditText e)</text>
<px>0</px>
<py>324</py>
</pin>
<pin>
<ID>_Pcthresh_recognize</ID>
<x0>0</x0>
<y0>530</y0>
<width>200</width>
<height>26</height>
<text>cthresh_recognize_created(EditText e)</text>
<px>0</px>
<py>342</py>
</pin>
<pin>
<ID>_Pcbias</ID>
<x0>0</x0>
<y0>558</y0>
<width>200</width>
<height>26</height>
<text>cbias_created(EditText e)</text>
<px>0</px>
<py>360</py>
</pin>
<pin>
<ID>_Pcacompress</ID>
<x0>0</x0>
<y0>586</y0>
<width>200</width>
<height>26</height>
<text>cacompress_created(EditText e)</text>
<px>0</px>
<py>378</py>
</pin>
<pin>
<ID>_Pclearn_param_o</ID>
<x0>0</x0>
<y0>614</y0>
<width>200</width>
<height>26</height>
<text>clearn_param_o_created(EditText e)</text>
<px>0</px>
<py>396</py>
</pin>
<pin>
<ID>_Pclearn_param_x</ID>
<x0>0</x0>
<y0>642</y0>
<width>200</width>
<height>26</height>
<text>clearn_param_x_created(EditText e)</text>
<px>0</px>
<py>414</py>
</pin>
<pin>
<ID>_Pclimit_length</ID>
<x0>0</x0>
<y0>670</y0>
<width>200</width>
<height>26</height>
<text>climit_length_created(EditText e)</text>
<px>0</px>
<py>432</py>
</pin>
<pin>
<ID>_Pcenhance</ID>
<x0>0</x0>
<y0>698</y0>
<width>200</width>
<height>26</height>
<text>cenhance_created(EditText e)</text>
<px>0</px>
<py>450</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI{
equalizer Iequalizer;
 class equalizer extends Button{
 equalizer(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;EQUALIZER&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {equalizer_clicked();}} );
}
}
close Iclose;
 class close extends Button{
 close(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;X&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {close_clicked();}} );
}
}
backup Ibackup;
 class backup extends Button{
 backup(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;BACKUP&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {backup_clicked();}} );
}
}
restore Irestore;
 class restore extends Button{
 restore(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;RESTORE&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {restore_clicked();}} );
}
}
clear Iclear;
 class clear extends Button{
 clear(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;CLEAR&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {clear_clicked();}} );
}
}
cflog_scale Icflog_scale;
 class cflog_scale extends CheckBox{
 cflog_scale(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 cflog_scale_created( this );
}
}
LABEL8 ILABEL8;
 class LABEL8 extends TextView{
 LABEL8(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;flog_scale&quot; );
}
}
calog_scale Icalog_scale;
 class calog_scale extends CheckBox{
 calog_scale(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 calog_scale_created( this );
}
}
cauto_learn Icauto_learn;
 class cauto_learn extends CheckBox{
 cauto_learn(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 cauto_learn_created( this );
}
}
cwritable Icwritable;
 class cwritable extends CheckBox{
 cwritable(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 cwritable_created( this );
}
}
csound_filter Icsound_filter;
 class csound_filter extends EditText{
 csound_filter(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 csound_filter_created( this );
}
}
LABEL11 ILABEL11;
 class LABEL11 extends TextView{
 LABEL11(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;alog_scale&quot; );
}
}
LABEL12 ILABEL12;
 class LABEL12 extends TextView{
 LABEL12(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;startup time&quot; );
}
}
cstartup_time Icstartup_time;
 class cstartup_time extends EditText{
 cstartup_time(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cstartup_time_created( this );
}
}
LABEL14 ILABEL14;
 class LABEL14 extends TextView{
 LABEL14(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;sound_filter&quot; );
}
}
LABEL15 ILABEL15;
 class LABEL15 extends TextView{
 LABEL15(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;thresh_trigger_on&quot; );
}
}
LABEL16 ILABEL16;
 class LABEL16 extends TextView{
 LABEL16(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;thresh_trigger_off&quot; );
}
}
LABEL17 ILABEL17;
 class LABEL17 extends TextView{
 LABEL17(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;thresh_count_on&quot; );
}
}
LABEL18 ILABEL18;
 class LABEL18 extends TextView{
 LABEL18(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;thresh_count_off&quot; );
}
}
LABEL19 ILABEL19;
 class LABEL19 extends TextView{
 LABEL19(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;thresh_recognize&quot; );
}
}
LABEL20 ILABEL20;
 class LABEL20 extends TextView{
 LABEL20(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;bias&quot; );
}
}
LABEL21 ILABEL21;
 class LABEL21 extends TextView{
 LABEL21(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;acompress&quot; );
}
}
LABEL22 ILABEL22;
 class LABEL22 extends TextView{
 LABEL22(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;learn_param_o&quot; );
}
}
LABEL23 ILABEL23;
 class LABEL23 extends TextView{
 LABEL23(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;limit_length&quot; );
}
}
cthresh_trigger_on Icthresh_trigger_on;
 class cthresh_trigger_on extends EditText{
 cthresh_trigger_on(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cthresh_trigger_on_created( this );
}
}
cthresh_trigger_off Icthresh_trigger_off;
 class cthresh_trigger_off extends EditText{
 cthresh_trigger_off(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cthresh_trigger_off_created( this );
}
}
cthresh_count_on Icthresh_count_on;
 class cthresh_count_on extends EditText{
 cthresh_count_on(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cthresh_count_on_created( this );
}
}
cthresh_count_off Icthresh_count_off;
 class cthresh_count_off extends EditText{
 cthresh_count_off(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cthresh_count_off_created( this );
}
}
cthresh_recognize Icthresh_recognize;
 class cthresh_recognize extends EditText{
 cthresh_recognize(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cthresh_recognize_created( this );
}
}
cbias Icbias;
 class cbias extends EditText{
 cbias(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cbias_created( this );
}
}
cacompress Icacompress;
 class cacompress extends EditText{
 cacompress(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cacompress_created( this );
}
}
clearn_param_o Iclearn_param_o;
 class clearn_param_o extends EditText{
 clearn_param_o(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 clearn_param_o_created( this );
}
}
clearn_param_x Iclearn_param_x;
 class clearn_param_x extends EditText{
 clearn_param_x(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 clearn_param_x_created( this );
}
}
climit_length Iclimit_length;
 class climit_length extends EditText{
 climit_length(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 climit_length_created( this );
}
}
LABEL31 ILABEL31;
 class LABEL31 extends TextView{
 LABEL31(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;auto_learn&quot; );
}
}
LABEL33 ILABEL33;
 class LABEL33 extends TextView{
 LABEL33(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;learn_param_x&quot; );
}
}
LABEL35 ILABEL35;
 class LABEL35 extends TextView{
 LABEL35(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;enhance&quot; );
}
}
cenhance Icenhance;
 class cenhance extends EditText{
 cenhance(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 cenhance_created( this );
}
}
LABEL37 ILABEL37;
 class LABEL37 extends TextView{
 LABEL37(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;writable&quot; );
}
}
 XGUI(){
 AbsoluteLayout layout=new AbsoluteLayout(ACTIVITY);
layout.setBackgroundColor(Color.rgb( 217, 255, 253));
ACTIVITY.setContentView(layout);
ACTIVITY.setTitle(&quot;VKeyboard設定&quot;);
 Iequalizer = new equalizer();
 Iequalizer.setLayoutParams( new AbsoluteLayout.LayoutParams( 218,76,232,80 ) );
 layout.addView( Iequalizer );
 Iclose = new close();
 Iclose.setLayoutParams( new AbsoluteLayout.LayoutParams( 130,152,462,2 ) );
 layout.addView( Iclose );
 Ibackup = new backup();
 Ibackup.setLayoutParams( new AbsoluteLayout.LayoutParams( 216,74,4,0 ) );
 layout.addView( Ibackup );
 Irestore = new restore();
 Irestore.setLayoutParams( new AbsoluteLayout.LayoutParams( 218,72,232,0 ) );
 layout.addView( Irestore );
 Iclear = new clear();
 Iclear.setLayoutParams( new AbsoluteLayout.LayoutParams( 214,74,4,82 ) );
 layout.addView( Iclear );
 Icflog_scale = new cflog_scale();
 Icflog_scale.setLayoutParams( new AbsoluteLayout.LayoutParams( 52,48,296,164 ) );
 layout.addView( Icflog_scale );
 ILABEL8 = new LABEL8();
 ILABEL8.setLayoutParams( new AbsoluteLayout.LayoutParams( 288,46,0,162 ) );
 layout.addView( ILABEL8 );
 Icalog_scale = new calog_scale();
 Icalog_scale.setLayoutParams( new AbsoluteLayout.LayoutParams( 52,46,296,218 ) );
 layout.addView( Icalog_scale );
 Icauto_learn = new cauto_learn();
 Icauto_learn.setLayoutParams( new AbsoluteLayout.LayoutParams( 54,46,298,268 ) );
 layout.addView( Icauto_learn );
 Icwritable = new cwritable();
 Icwritable.setLayoutParams( new AbsoluteLayout.LayoutParams( 50,46,298,320 ) );
 layout.addView( Icwritable );
 Icsound_filter = new csound_filter();
 Icsound_filter.setLayoutParams( new AbsoluteLayout.LayoutParams( 294,52,300,424 ) );
 layout.addView( Icsound_filter );
 ILABEL11 = new LABEL11();
 ILABEL11.setLayoutParams( new AbsoluteLayout.LayoutParams( 288,48,0,214 ) );
 layout.addView( ILABEL11 );
 ILABEL12 = new LABEL12();
 ILABEL12.setLayoutParams( new AbsoluteLayout.LayoutParams( 290,54,0,366 ) );
 layout.addView( ILABEL12 );
 Icstartup_time = new cstartup_time();
 Icstartup_time.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,54,298,368 ) );
 layout.addView( Icstartup_time );
 ILABEL14 = new LABEL14();
 ILABEL14.setLayoutParams( new AbsoluteLayout.LayoutParams( 292,50,0,424 ) );
 layout.addView( ILABEL14 );
 ILABEL15 = new LABEL15();
 ILABEL15.setLayoutParams( new AbsoluteLayout.LayoutParams( 294,48,0,478 ) );
 layout.addView( ILABEL15 );
 ILABEL16 = new LABEL16();
 ILABEL16.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,48,0,530 ) );
 layout.addView( ILABEL16 );
 ILABEL17 = new LABEL17();
 ILABEL17.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,48,0,582 ) );
 layout.addView( ILABEL17 );
 ILABEL18 = new LABEL18();
 ILABEL18.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,48,0,634 ) );
 layout.addView( ILABEL18 );
 ILABEL19 = new LABEL19();
 ILABEL19.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,44,0,686 ) );
 layout.addView( ILABEL19 );
 ILABEL20 = new LABEL20();
 ILABEL20.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,42,0,734 ) );
 layout.addView( ILABEL20 );
 ILABEL21 = new LABEL21();
 ILABEL21.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,44,0,780 ) );
 layout.addView( ILABEL21 );
 ILABEL22 = new LABEL22();
 ILABEL22.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,46,0,828 ) );
 layout.addView( ILABEL22 );
 ILABEL23 = new LABEL23();
 ILABEL23.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,46,0,926 ) );
 layout.addView( ILABEL23 );
 Icthresh_trigger_on = new cthresh_trigger_on();
 Icthresh_trigger_on.setLayoutParams( new AbsoluteLayout.LayoutParams( 294,52,300,478 ) );
 layout.addView( Icthresh_trigger_on );
 Icthresh_trigger_off = new cthresh_trigger_off();
 Icthresh_trigger_off.setLayoutParams( new AbsoluteLayout.LayoutParams( 294,52,302,530 ) );
 layout.addView( Icthresh_trigger_off );
 Icthresh_count_on = new cthresh_count_on();
 Icthresh_count_on.setLayoutParams( new AbsoluteLayout.LayoutParams( 294,48,302,584 ) );
 layout.addView( Icthresh_count_on );
 Icthresh_count_off = new cthresh_count_off();
 Icthresh_count_off.setLayoutParams( new AbsoluteLayout.LayoutParams( 298,48,300,634 ) );
 layout.addView( Icthresh_count_off );
 Icthresh_recognize = new cthresh_recognize();
 Icthresh_recognize.setLayoutParams( new AbsoluteLayout.LayoutParams( 298,48,300,684 ) );
 layout.addView( Icthresh_recognize );
 Icbias = new cbias();
 Icbias.setLayoutParams( new AbsoluteLayout.LayoutParams( 298,46,300,734 ) );
 layout.addView( Icbias );
 Icacompress = new cacompress();
 Icacompress.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,46,302,782 ) );
 layout.addView( Icacompress );
 Iclearn_param_o = new clearn_param_o();
 Iclearn_param_o.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,46,302,830 ) );
 layout.addView( Iclearn_param_o );
 Iclearn_param_x = new clearn_param_x();
 Iclearn_param_x.setLayoutParams( new AbsoluteLayout.LayoutParams( 298,46,300,878 ) );
 layout.addView( Iclearn_param_x );
 Iclimit_length = new climit_length();
 Iclimit_length.setLayoutParams( new AbsoluteLayout.LayoutParams( 300,48,300,926 ) );
 layout.addView( Iclimit_length );
 ILABEL31 = new LABEL31();
 ILABEL31.setLayoutParams( new AbsoluteLayout.LayoutParams( 288,46,0,268 ) );
 layout.addView( ILABEL31 );
 ILABEL33 = new LABEL33();
 ILABEL33.setLayoutParams( new AbsoluteLayout.LayoutParams( 296,44,0,878 ) );
 layout.addView( ILABEL33 );
 ILABEL35 = new LABEL35();
 ILABEL35.setLayoutParams( new AbsoluteLayout.LayoutParams( 294,44,0,976 ) );
 layout.addView( ILABEL35 );
 Icenhance = new cenhance();
 Icenhance.setLayoutParams( new AbsoluteLayout.LayoutParams( 300,46,300,976 ) );
 layout.addView( Icenhance );
 ILABEL37 = new LABEL37();
 ILABEL37.setLayoutParams( new AbsoluteLayout.LayoutParams( 290,44,0,318 ) );
 layout.addView( ILABEL37 );
 GUI_created( layout );
}
}
</codetext>
</codeclip>
<ID_maker>42</ID_maker>
<height>475</height>
<レイアウト>VKeyboard設定
529
516
217
255
253
xxscale=2
BUTTON;equalizer;EQUALIZER;116;40;109;38;51;51;51;192;192;192;Dialog;14;null;0;0;1;0;1;Button;
BUTTON;close;X;231;1;65;76;51;51;51;192;192;192;Dialog;14;null;0;0;1;0;1;Button;
BUTTON;backup;BACKUP;2;0;108;37;51;51;51;192;192;192;Dialog;14;null;0;0;1;0;1;Button;
BUTTON;restore;RESTORE;116;0;109;36;51;51;51;192;192;192;Dialog;14;null;0;0;1;0;1;Button;
BUTTON;clear;CLEAR;2;41;107;37;51;51;51;192;192;192;Dialog;14;null;0;0;1;0;1;Button;
CHECKBOX;cflog_scale;1;148;82;26;24;51;51;51;238;238;238;1;1;0;CheckBox;
LABEL;LABEL8;flog_scale;0;81;144;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
CHECKBOX;calog_scale;1;148;109;26;23;51;51;51;238;238;238;1;1;0;CheckBox;
CHECKBOX;cauto_learn;0;149;134;27;23;51;51;51;238;238;238;1;1;0;CheckBox;
CHECKBOX;cwritable;0;149;160;25;23;51;51;51;238;238;238;1;1;0;CheckBox;
TEXTFIELD;csound_filter;null;150;212;147;26;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
LABEL;LABEL11;alog_scale;0;107;144;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL12;startup time;0;183;145;27;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
TEXTFIELD;cstartup_time;null;149;184;148;27;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
LABEL;LABEL14;sound_filter;0;212;146;25;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL15;thresh_trigger_on;0;239;147;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL16;thresh_trigger_off;0;265;148;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL17;thresh_count_on;0;291;148;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL18;thresh_count_off;0;317;148;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL19;thresh_recognize;0;343;148;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL20;bias;0;367;148;21;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL21;acompress;0;390;148;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL22;learn_param_o;0;414;148;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL23;limit_length;0;463;148;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
TEXTFIELD;cthresh_trigger_on;null;150;239;147;26;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;cthresh_trigger_off;null;151;265;147;26;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;cthresh_count_on;null;151;292;147;24;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;cthresh_count_off;null;150;317;149;24;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;cthresh_recognize;null;150;342;149;24;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;cbias;null;150;367;149;23;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;cacompress;null;151;391;148;23;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;clearn_param_o;null;151;415;148;23;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;clearn_param_x;null;150;439;149;23;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
TEXTFIELD;climit_length;null;150;463;150;24;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
LABEL;LABEL31;auto_learn;0;134;144;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL33;learn_param_x;0;439;148;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL35;enhance;0;488;147;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
TEXTFIELD;cenhance;null;150;488;150;23;51;51;51;255;255;255;Dialog;12;1;1;0;EditText;
LABEL;LABEL37;writable;0;159;145;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;TextView;
</レイアウト>
</aobject>
<relation>
<ID>_R54</ID>
<pin1name>_A2(_Pcwritable)</pin1name>
<pin2name>_X33(_P50)</pin2name>
</relation>
</xobject>
<relation>
<ID>_R164</ID>
<pin1name>_A88(_PAconfig)</pin1name>
<pin2name>_X160(_P4)</pin2name>
</relation>
<relation>
<ID>_R165</ID>
<pin1name>_A88(_PGUIout)</pin1name>
<pin2name>_X160(_P1)</pin2name>
</relation>
<ImgIcon>
<ID>_I166</ID>
<x0>844</x0>
<y0>513</y0>
<width>123</width>
<height>125</height>
<image>ppinppaoaaabkegejegeaabacaaaaabaaabaaaaapplnaadeaaiagagahagafaia
hahahajajaiakamaebnamalalamajbcbdbpaebnbkbpbobnbkbmbmbacecochcac
ccmcdcmbmbichdjcmcadbdedededpbhcjdndidcdmdocddedcdpplnaadebajaja
jamalamaibnanaibcdbcmbbccdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd
cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdppam
aabbiaaagjaagjdabaccaacabbbadabbbappemaapbaaaabafababababababaaa
aaaaaaaaaaaaaabacadaeafagahaiajakalappemaaflabaacabadadacaeadafa
faeaeaaaaabanhbacadaaaeabbfacbbcbdbegadbbfbghaccbhebcdbibjbkiadc
ceblbmfbcfbnapecddcgchcijakagbhbibjbkbfcgchcicjckcedfdgdhdidjdkd
deeefegeheiejekedfefffgfhfifjfkfdgegfggghgigjgkgdhehfhghhhihjhkh
dieifigihiiijikicjdjejfjgjhjijjjkjckdkekfkgkhkikjkkkcldlelflglhl
iljlklcmdmemfmgmhmimjmkmcndnenfngnhninjnknbocodoeofogohoiojokobp
cpdpepfpgphpipjpkpppemaapbbaaadabababababababababaaaaaaaaaaaaaba
cadaeafagahaiajakalappemaaflbbaacabacaeaeadaeahafaeaeaaabacahhaa
bacadabbeafabcbdgacbbebfhabgbhdbcccdbiiaebcebjbkblbmjadcddcfapfb
cgchbnkagbecedbofcbphbibjbkbgchcicjckcfdgdhdidjdkddeeefegeheieje
kedfefffgfhfifjfkfdgegfggghgigjgkgdhehfhghhhihjhkhcidieifigihiii
jikicjdjejfjgjhjijjjkjckdkekfkgkhkikjkkkcldlelflglhliljlklcmdmem
fmgmhmimjmkmcndnenfngnhninjnkncodoeofogohoiojokocpdpepfpgphpipjp
kpppknaamadabaaacabbdabbaapdaahpkpjcjcigaackkiicaackkiicaackijjf
aeeobibflfmndedhhbljeajmedhgdkgmbmbimpfeaaifckkiicaackkiicaackki
icaackkiicaackkiicaackkiicaackkiicaackkiicaaekgcgjilpfjiohacnhhb
beoignmnpllnfdjcfielccbdhjbmlpfonhgpeodainaljkejejffinmboohljkpf
ihollgipcoijhebolhgdlndchijagpcmkdgjdgmigeibabaalpineplohbcifdjg
edlhnpmejgknnfnoonpichbllmkalneedcnifgaajigdjjkaokiakaihidomlgde
ceapclknbmebkpclhenccnagfmogmldmigaaamefhagiacphbbobilamokijadfp
fddpihmogpebggbonedhnbafdmnnnffjpmlifdnlipppaaeigephmckhkogblppl
ncinnpkgfgbpekafaikngjhjkkifhkhhiheekmodgkccinkpephkoaejmodojlpk
gdmbnebfpdohgapjffpigebfmlipjigkhacjnakajbfdlkejacjdhlagalhmojlj
fkpgejnhgapeflofappjjifchncoplkikoknlalglojbmpjickgipgfdjdafkmde
agahbeepnojfhbkpnanlfmcnpnknjdclendoldcjgofdompedkhkjegaidhoapac
dpffmljaikmnonihlmfmckkommkfomfaljleibjdnflnnfjedfnnieafbehpgool
djpcmmjgdgdgooigkpdkgjfkhdnapmjeckajehfkpkafmmicckkiaaicckkiaaic
ckkiaajcddleoflgbpgcomlflilngalehcjlemngnjklpoincacplddggokpgpak
pajenmncihpdeifhlkpnpaloofhcljcgccknkfknejelnlgnmlioejmlijecomge
hapfoeilfbjogbojidclpeoajokpokpkfcnkpklnhggbbpnkmkppaakggechemaa
mkdkojmjbpfmaafhnicnmlholfiikgphfbedcmoeepcneljpgckaadcejelcngjb
epidpfcnhlednfkgdpkfgnmdnefgdhmbghgpkdehlolgmabnbdcbbdjnjljmepgm
hfhaloofjgdkfebhopljdheklghbgpknfhfmdmndikfcecjhebcbmdgmggcflfbh
eohgakfmchcojgoenkjcceoanmlkfbgaejokpmoeloafofndmmgfchflmjlcndan
jboigdnhbkpigklhhfnjkgkjpljiedhpglgilnpfgjjgooibnojfmkaobcffhfeh
miiebeanpafoffeppaibihhlffhlblilgjcpomidpogfhffikjlmhhbdalmaoajb
nhheeolghodcbjffeienljmelogjccncifnnapgbdkmkoflnmnnhckmnfdjjkjge
hbnabcmclbpdhhobojfplnhpcoclgblmfmaljolgghfcbnekcapcademnceodeoi
plonfdgmkopjbbfhnkncpkpblpkbomgolahekijcobjdjjdhecdifiaadifpokme
ogheofnlofigfeccigenafniljndocbljjomnjdonooacoodkjejdfjnmendghpk
kjhiapkndoopfaifhdobkcbpnbojikkpnhhmhimkmmblemdlabhleocankojeihk
mgefkhgifllkollkekkgleakhangcdbofoadhmihmbkmnklbbcdakcjdlbcllchk
hckmblidmecemjoppbcflkffmidkdginfmncdgiokhnmpjiiedikfdldjamdlmjg
bijcbjciiaidacoiemabbenkmhhnhnmjcebnfeebaabffeebaabffeebaagfgcnk
bonglamfgjjdfhneccomgpiehnkgedbpgakcnddllfehafhahcfhbolblgneoacp
hmdmgdkdggjjfddmdchblgfeihjigfhagooemphgobgialeppmbakghmemkngghk
pkkognhhgjkpcgjmgplelelfbcpgkbiepnemaeidpddokiepkiicdaommldefbhm
gimpbamkpgkjpbglkghbfcmhlmihjnchdnkmabmbcbjhaaopnjlcmiljnfdnehco
mcaglelidiaabbejflfiekjnoiaibjamkphflhbpcfncopjalgcjkefknjfonldm
pjooikfjhhpbamdbmfanjpgagaadoagekdafhancjhokjgkbdiemphelfgdnocbn
kfidongonndjahfhkndmcbmamboikdbpgnllphlaipjbgididkknnnofjnnengag
ecigfgdlcfjbjjdpllhhecpbnlknnjbkflnmemhppbhganpbafbdmpcilehiifao
haobjphccikdjcnkfanlenmhbcmhfglldnpdcojehhibgcndcdlnphinggmbbbfi
afcnlcfhomidacgpccfkfmbdmnlocamnfmchbjmkbhlbpalcjbncdpgiobnniahm
cppkedbphkbiokngnopgokmcfjoceljkpgckplkjimdcjafjajfabcibhgacaiid
hmmbfnbgnkloojecendkbpgefjahnccoglggoicmcmphjlcchgcbjhiliojembph
hhdaonelokmpbelkihjmdbkecnelnodfiefnckfjmahnggffcpnoabdiilcjoaec
kmeobaoiekobianmlchkbkcfhkicekongmfdgmplikihgiepkogfkldbknjjccbb
gocpeobaelcbkhocpecflhkamhjalkjhimcnmnjfmopmmmjkdbhgapfclkdgifap
ogdkdkifcmgpkjinadheiigpndcjahldnhcnlckdbnocckhanohhjajcmogfpcpc
dadpeddofbfbegnejnmmiohfkfopdkobfkhgjglkolljckppaaigoelpngebmccn
blpdadpnmpdcodijkolgbkdnmdlcbgfcepahlnoflggdhhchmblailfhjbjbbifp
kcjngaclmlicaplnihjgokekccidmihpdbddojljmenkdijphfbeckkfippmjfdn
ppaahledlcljnfocfnbelhldlgljafnomhpdnldcobdghaalobjlkkbbdlhaiifl
plgapnhefgdojbdckldnfgngglkpmnbfjhagdbbnhgbecmojamoilcanfndimami
ohfbkmigkfgkpjdopkmanmnbfoakgffcnkpomogceofmackohkjpdijokibmhjcm
onhcapfjjiklappoiiocfhlalgbefjcnpcbjjfofbdmplahcafnhnaaakhfgfbpi
bonnoghnemkhfcgkblegemlnnngcfphaikfphamnmbkiinakcakiicakcakiicak
oalacohgkiflpckajokfehkjjghlfiokpogbonlflkijlmfmcapjcomgefgfkjpb
mifliekjdhbpoahafldjoofdginjhbioemkjnopomgnofllajfncpgncdoilhlaj
bgcofjdelcpaahlgbiapbcclapglnlmkihndcooicndeehhnghdcakilfigmohpf
hpahgeicbaknhndimpmekjncbnhifmhbkheklnlfnhfkmobfiiokdcdcgaddflch
oaddcildkjcoedlnijellgnakdlbligjlhlafnhamenlmhbjccbjpjjcpiapklep
bmlohmolndapdpknmldjhfapmcknofdjphbknkkppebolkcpjfbgilhmljdgocle
gapiopkhcainimpdpfmfaifhonkaljbbnflfdjcikailpbijopciklcnlcamepla
pidbiokfcjnfjfinkflnbmebbgofannnjjgbfollejhcijdphnhadcjooflipgbp
pedmeaiipkoohkdnocphkilblmhhcfpadlaaefopgaaiadfhnkobdpcmklfpnnfp
fknjfmonhinhpcpjkckfgmeglhjdpeonbchemcmkjhdobknmehojcadnogmoepjj
fpnbcegbcilpcfijpmecmachcgbfcpckpjnhakhgmndnpefmpedahiknmdbeogom
ldgeoipnjmigpdfbmhabpdgokdpjmicdppaabpfdkcjcldkjkdcjbhfolhkbofpc
jjdbhecpljpokmkoaakpmbhngjipdihfkbofmjeeagjejhdhijnkbghahjdhhmeo
ddcjkghpiimdchklnpjpkbfanjnmionibhmbclgmanemndifdlaalhghgadlepnj
bbnkoopncfenogfaonhkeclhmeijcmgmplnnbejoefgghdopbbilfcapflokjiah
cpjhbbkcjigdmbpgbmjmjbephcfdhnmhjcenfogbkdhigioceohgljgebjeemcnn
kfnnbmbdnpbhimmpfaggaggglkiodhnjhdcoomoiaobofdlejdnoeghmdhibdphb
kpanhadeaolllnnfhdkfbpfjoldkcdbemhkjjjilijkmbodhdaiccplnojincoll
lkljlnlhlejeocokggienkdonfpodcmbicobjlokhhemondaanmllfeccfkoajle
gockejcbdejcnijjjajmgehmbfhmkhlmpibofheimigjkngjnkkkkokfegeajhkb
nhnmhmooejoaaidogjpbkfaahjboeecfpccicbfodkigbkmlklilklcigdiblclb
imkeopmjopfdonefjekbembkbfceikibaaoaaajkigaackkiicaackkiicaamknd
hhdmkdhfjinkdklieffldpmhglnnebkifmobdckomkadbenkkmdeaemblcmphdgl
afhcdlhnfdlmnhbejdkifopokfnfojlnlbfodckolcdcofflbpmmbbceogellnne
bhbchanpcckmpecccfpdlodjbhpjbkpkbfgkhlobelbaaohggmkfahdgmaglkpcj
nfhhhlgdcfogpmhkkenkcoihmphfpcgifkfnpnpehjkebnccihmpdodcfijlgjcd
amcbebhgigjbponmlhelkjgofjdbejhjdfdlgenbdeoeakpignjlpbkikdfllimh
ddfneihhabmnfdencgonfboiaelnnnijaagapdpdcmaijdionkbncamckeoaaaff
idjmndhifdgnjfipodjgafndfohmhjpjaobedjjpgnheeimomlnmoekmjbjlcpdj
dhlhajpdgmnlocaiadncmljcgkamdekdmlmokdpgogpdbcjfoplccnakkignldll
ihgngdgfknlpgabahafkfhfpnicobjppaaebnopmfnphepbcaeobhhjfoobddopi
iakeodapenjbdhmocgpgapnkkapmbfgomheeapehdajkklojmelhmchcpjgnaind
klkiicakcakijcicbaigckkiaaicckkiaaicckkiaalcnmmpdhlckoodjccnmphd
mddpbefklmhgndnococmgohdjliaaeifhpoaaejmjmhmkfepkidppkjigjnkggkp
pejienallinebjbkllknddoppiocfboipdjnbcneaabhdkcmofnbmfmobnmgcmob
aihmmjpajkgoliphjaiogdhjblonlnjoajhemdhgichfdchajocnhlhgbinkfokc
embbenadiolmindijojfkbgjfklhjgikknjfjfiohpkfmihnabnlgminiemabbie
eaaikhcpigdablapjippaajijnppaaokngnfnpihoibjdoniocdnffeijmddjfnn
gephjhpgjhjbfiblpnikpkggdlmlciopfnocncekjfccajegkdmjkiaablifolkc
pdbppemnnhdfppaacefbelkhhfpbdonaaefboicmddgjpmjjacobnnfaaachefpm
malnnpllcofmdkghdneljoechcnbfoldheionaiekkjfciikjmhcaagfgabilkko
gfobkchnfdnobdfefniknjmgnmjjacjbdoiiagfjogmmibcjldobohelbapoejfj
bjbklogdkfgpmjkjfieicklehhdobkmaekfhgfhaajbeimfmmgafbafeebafbafe
ebafbafeebafbafeebafbaffokncckklcilejhdkhfkifekckonniandfejfekak
pafcjlheiphhhloefnbongdebmpoocncochldbfdbidgemmehammlomjaomiojfn
fnihpicmpalknakdlpgeolkboflkhkdbgplebjobfpbbhlongedfenbbjfhpghjo
pkmpgfoicneplclniggljejhmandojjhibokcpldnolahmgnlllhlkilmcnoekjl
jlfjcccifdmncpjdambffpakoakbkmcooolpemcbippegmgjkbnglpndjljlfljl
ieohjeanmbadicdhelmioifpbdipbfboipjbekbnfoenehjhpeecinofkdocphnn
eckihicmoioplcbpnfhnmimencobjjmbpbcgcnlmmajbhfjdjhahkhcaaedajoof
fiaeobphdhaoppaakbcebiehpniihhbeldnkonpjebempihpaigajlnfndfhfhll
gnnkfpjedollnhodmolfflenbhjhbgjmfeoggepenklhnbembnlflfjmmdomcbic
enllblioaaeokjcoohnbjpkjmjkhgpplfcjkkidnifpllpfeikajchbpeaffgfdc
glbhkjaacmlldjlplcdmkhgijlecjfgbjogljnbdopglggldafpaemkiemdneplp
pnhalnjnigkjmmobleiejlginooacgnjomjfbipdcmaoojhipkkgmoflmhihdkco
gcpjakcmffelnpialanpbehedejcppaacfpjhinciphfdgjkjggfkhompjfdoibk
mghjgbcnmikdieidpdaonhfmaajhmggeppaaieenpjdfbnnbcffopmkpnemlpjko
okamibbanppadkoahemhoilcanmhjdcolipcbblfjdeijefaenmbmfknkeohihpi
plikndiiaohnhbphaknmbooepgocojdofenacppfkdoolgbeinleoijflhpgnopn
gnklddbofblgieocmkpggfnagfcbofknjpdfacegmalkmaopbpiaibacpjbhcidd
aenbakjdfkmkpcpakgpolkifplknncollmpheagilalmahlnmljkhabkooiabmha
ankinnakcakikeicbaigckkiaaicckkiaajcjcigakoapeemodnaneggkpnaoepm
bfklcnfplgehbdfknnbleaejhcldjfpemaddlojfdmbomlhfcpekolgchnfdnbih
hekmlfmnbbmbaclpgmijhabpokgpkiaakiidgniccmacbaaaamaaagbacfbnfeaa
dhojjdelljafapoclljgogddedglcdkkpadfelbpcfipcfopnadecmkfnennalca
jancdgkchaogaafmogojfjgoimkjhidmnhgefoagaljlplapfkemnicdnkclpodj
pechchdmhggfcejemdehakjapkbopflampbfdnfllafflchgcondgnhlkmpacaeh
nfbnpdennicmnlmaehpkpchjhflicohbkimdodedigocpfkednocnefpnnmoanel
leiljcialiilnaemdjpmgklcenhbfkaaheccjaeflkaaafapbejbeahfebednmle
bmomnkbolpjhpgephgdgpllemadalndjmpafgbpdhhhcejhcoionfjnncfcgaijd
phpanhkkloiffnfljeeploliiaoomdikcooimhpgngaifoiieadoikpbfifhebag
kakfaakejcigakcakiicakcakiicakcakiicakcakiicakcakiicakcaljkiicak
fafmncebafbafeebafbafeebafbafeebafhappjn</image>
</ImgIcon>
<pin>
<ID>_P167</ID>
<x0>625</x0>
<y0>239</y0>
<width>53</width>
<height>30</height>
<text>save()</text>
<px>10</px>
<py>40</py>
</pin>
<relation>
<ID>_R168</ID>
<pin1name>_P167</pin1name>
<pin2name>_X91(_P1)</pin2name>
</relation>
<relation>
<ID>_R171</ID>
<pin1name>_A88(_PAlearn)</pin1name>
<pin2name>_X_G87(_P91)</pin2name>
</relation>
<operation>
<ID>_O172</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>10</x0>
<y0>506</y0>
<width>121</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>71</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//サービスを実行


try{
purge();
Intent intent = new Intent(); 
intent.setClassName(&quot;com.example.vkeyboard&quot;, &quot;com.example.vkeyboard.VKeyboardService&quot;); 
ACTIVITY.startService(intent);
ACTIVITY.finish();
} catch(Exception e){dprint(e+&quot;\n&quot;);}
</codetext>
</operation>
<relation>
<ID>_R173</ID>
<pin1name>_A88(_PAexecute)</pin1name>
<pin2name>_O172</pin2name>
</relation>
<aobject>
<ID>_A88</ID>
<x0>139</x0>
<y0>239</y0>
<width>280</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(AbsoluteLayout l)</text>
<px>0</px>
<py>54</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// GUIを作成する
XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_PAconfig</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>config_clicked()</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_PAlearn</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>learn_clicked()</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_PAins</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>ins_clicked()</text>
<px>0</px>
<py>108</py>
</pin>
<pin>
<ID>_PAdel</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>del_clicked()</text>
<px>0</px>
<py>126</py>
</pin>
<pin>
<ID>_PAprev</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>prev_clicked()</text>
<px>0</px>
<py>144</py>
</pin>
<pin>
<ID>_PAnext</ID>
<x0>0</x0>
<y0>250</y0>
<width>200</width>
<height>26</height>
<text>next_clicked()</text>
<px>0</px>
<py>162</py>
</pin>
<pin>
<ID>_PAvoice_no</ID>
<x0>0</x0>
<y0>278</y0>
<width>200</width>
<height>26</height>
<text>voice_no_changed(int val)</text>
<px>0</px>
<py>180</py>
</pin>
<pin>
<ID>_PAbright</ID>
<x0>0</x0>
<y0>306</y0>
<width>200</width>
<height>26</height>
<text>bright_changed(int val)</text>
<px>0</px>
<py>198</py>
</pin>
<pin>
<ID>_PAlength</ID>
<x0>0</x0>
<y0>334</y0>
<width>200</width>
<height>26</height>
<text>length_changed(int val)</text>
<px>0</px>
<py>216</py>
</pin>
<pin>
<ID>_Pseimon0</ID>
<x0>0</x0>
<y0>362</y0>
<width>200</width>
<height>26</height>
<text>seimon0_created(TextView t)</text>
<px>0</px>
<py>234</py>
</pin>
<pin>
<ID>_PPseimon0</ID>
<x0>0</x0>
<y0>390</y0>
<width>200</width>
<height>26</height>
<text>seimon0_paint(Canvas g)</text>
<px>0</px>
<py>252</py>
</pin>
<pin>
<ID>_Pseimon</ID>
<x0>0</x0>
<y0>418</y0>
<width>200</width>
<height>26</height>
<text>seimon_created(TextView t)</text>
<px>0</px>
<py>270</py>
</pin>
<pin>
<ID>_PPseimon</ID>
<x0>0</x0>
<y0>446</y0>
<width>200</width>
<height>26</height>
<text>seimon_paint(Canvas g)</text>
<px>0</px>
<py>288</py>
</pin>
<pin>
<ID>_PAexecute</ID>
<x0>0</x0>
<y0>474</y0>
<width>200</width>
<height>26</height>
<text>execute_clicked()</text>
<px>0</px>
<py>306</py>
</pin>
<pin>
<ID>_Ptext</ID>
<x0>0</x0>
<y0>502</y0>
<width>200</width>
<height>26</height>
<text>text_created(EditText e)</text>
<px>0</px>
<py>324</py>
</pin>
<pin>
<ID>_Pweight</ID>
<x0>0</x0>
<y0>530</y0>
<width>200</width>
<height>26</height>
<text>weight_created(EditText e)</text>
<px>0</px>
<py>342</py>
</pin>
<pin>
<ID>_Pcode</ID>
<x0>0</x0>
<y0>558</y0>
<width>200</width>
<height>26</height>
<text>code_created(EditText e)</text>
<px>0</px>
<py>360</py>
</pin>
<pin>
<ID>_Presult</ID>
<x0>0</x0>
<y0>586</y0>
<width>200</width>
<height>26</height>
<text>result_created(TextView t)</text>
<px>0</px>
<py>378</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI{
config Iconfig;
 class config extends Button{
 config(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 193, 189, 189 ));
 setText( &quot;CONFIG&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {config_clicked();}} );
}
}
learn Ilearn;
 class learn extends Button{
 learn(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 5, 3, 0 ));
 setBackgroundColor( Color.rgb( 193, 189, 189 ));
 setText( &quot;LEARN&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {learn_clicked();}} );
}
}
ins Iins;
 class ins extends Button{
 ins(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 193, 189, 189 ));
 setText( &quot;INS&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {ins_clicked();}} );
}
}
del Idel;
 class del extends Button{
 del(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 193, 189, 189 ));
 setText( &quot;DEL&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {del_clicked();}} );
}
}
prev Iprev;
 class prev extends Button{
 prev(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 0, 0, 0 ));
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 setText( &quot;&lt;&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {prev_clicked();}} );
}
}
next Inext;
 class next extends Button{
 next(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 0, 0, 0 ));
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 setText( &quot;&gt;&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {next_clicked();}} );
}
}
voice_no Ivoice_no;
 class voice_no extends SeekBar{
 voice_no(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 setProgress( 0 );
 setMax( 100 );
 setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
 public void onStopTrackingTouch(SeekBar seekBar) {}
 public void onStartTrackingTouch(SeekBar seekBar) {}
 public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { voice_no_changed( progress ); }
 });
}
}
bright Ibright;
 class bright extends SeekBar{
 bright(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 setProgress( 0 );
 setMax( 100 );
 setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
 public void onStopTrackingTouch(SeekBar seekBar) {}
 public void onStartTrackingTouch(SeekBar seekBar) {}
 public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { bright_changed( progress ); }
 });
}
}
length Ilength;
 class length extends SeekBar{
 length(){
 super(ACTIVITY);
 setBackgroundColor( Color.rgb( 238, 238, 238 ));
 setProgress( 0 );
 setMax( 100 );
 setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
 public void onStopTrackingTouch(SeekBar seekBar) {}
 public void onStartTrackingTouch(SeekBar seekBar) {}
 public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { length_changed( progress ); }
 });
}
}
seimon0 Iseimon0;
 class seimon0 extends TextView{
 seimon0(){
 super(ACTIVITY);
 setGravity(Gravity.RIGHT|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 0, 0, 0 ));
 setText( &quot;&quot; );
 seimon0_created( this );
}
 protected void onDraw(Canvas g){ super.onDraw( g ); seimon0_paint(g); }
}
seimon Iseimon;
 class seimon extends TextView{
 seimon(){
 super(ACTIVITY);
 setGravity(Gravity.RIGHT|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 0, 0, 0 ));
 setText( &quot;&quot; );
 seimon_created( this );
}
 protected void onDraw(Canvas g){ super.onDraw( g ); seimon_paint(g); }
}
execute Iexecute;
 class execute extends Button{
 execute(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 192, 192, 192 ));
 setText( &quot;EXECUTE&quot; );
 setOnClickListener(new Button.OnClickListener(){ public void onClick(View v) {execute_clicked();}} );
}
}
text Itext;
 class text extends EditText{
 text(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 text_created( this );
}
}
weight Iweight;
 class weight extends EditText{
 weight(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;&quot; );
 weight_created( this );
}
}
code Icode;
 class code extends EditText{
 code(){
 super(ACTIVITY);
 setPadding(1, 1, 1, 1);
 setTextSize( 16f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;0&quot; );
 code_created( this );
}
}
result Iresult;
 class result extends TextView{
 result(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 20f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 204 ));
 setText( &quot;&quot; );
 result_created( this );
}
}
LABEL10 ILABEL10;
 class LABEL10 extends TextView{
 LABEL10(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;No.&quot; );
}
}
LABEL11 ILABEL11;
 class LABEL11 extends TextView{
 LABEL11(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 14f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;Bright&quot; );
}
}
LABEL18 ILABEL18;
 class LABEL18 extends TextView{
 LABEL18(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 252, 252, 252 ));
 setText( &quot;CODE&quot; );
}
}
LABEL16 ILABEL16;
 class LABEL16 extends TextView{
 LABEL16(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;Text&quot; );
}
}
LABEL17 ILABEL17;
 class LABEL17 extends TextView{
 LABEL17(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 255, 255, 255 ));
 setText( &quot;Weight&quot; );
}
}
LABEL15 ILABEL15;
 class LABEL15 extends TextView{
 LABEL15(){
 super(ACTIVITY);
 setGravity(Gravity.CENTER|Gravity.CENTER);
 setPadding(1, 1, 1, 1);
 setTextSize( 12f ); setTextColor( Color.rgb( 51, 51, 51 ));
 setBackgroundColor( Color.rgb( 252, 252, 252 ));
 setText( &quot;Length&quot; );
}
}
 XGUI(){
 AbsoluteLayout layout=new AbsoluteLayout(ACTIVITY);
layout.setBackgroundColor(Color.rgb( 223, 253, 248));
ACTIVITY.setContentView(layout);
ACTIVITY.setTitle(&quot;音声キーボード設定&quot;);
 Iconfig = new config();
 Iconfig.setLayoutParams( new AbsoluteLayout.LayoutParams( 218,60,424,6 ) );
 layout.addView( Iconfig );
 Ilearn = new learn();
 Ilearn.setLayoutParams( new AbsoluteLayout.LayoutParams( 350,72,2,888 ) );
 layout.addView( Ilearn );
 Iins = new ins();
 Iins.setLayoutParams( new AbsoluteLayout.LayoutParams( 198,62,2,6 ) );
 layout.addView( Iins );
 Idel = new del();
 Idel.setLayoutParams( new AbsoluteLayout.LayoutParams( 202,62,212,6 ) );
 layout.addView( Idel );
 Iprev = new prev();
 Iprev.setLayoutParams( new AbsoluteLayout.LayoutParams( 74,280,2,76 ) );
 layout.addView( Iprev );
 Inext = new next();
 Inext.setLayoutParams( new AbsoluteLayout.LayoutParams( 78,282,566,76 ) );
 layout.addView( Inext );
 Ivoice_no = new voice_no();
 Ivoice_no.setLayoutParams( new AbsoluteLayout.LayoutParams( 512,70,132,368 ) );
 layout.addView( Ivoice_no );
 Ibright = new bright();
 Ibright.setLayoutParams( new AbsoluteLayout.LayoutParams( 512,68,130,442 ) );
 layout.addView( Ibright );
 Ilength = new length();
 Ilength.setLayoutParams( new AbsoluteLayout.LayoutParams( 518,62,124,514 ) );
 layout.addView( Ilength );
 Iseimon0 = new seimon0();
 Iseimon0.setLayoutParams( new AbsoluteLayout.LayoutParams( 238,280,80,76 ) );
 layout.addView( Iseimon0 );
 Iseimon = new seimon();
 Iseimon.setLayoutParams( new AbsoluteLayout.LayoutParams( 236,282,326,76 ) );
 layout.addView( Iseimon );
 Iexecute = new execute();
 Iexecute.setLayoutParams( new AbsoluteLayout.LayoutParams( 248,68,376,890 ) );
 layout.addView( Iexecute );
 Itext = new text();
 Itext.setLayoutParams( new AbsoluteLayout.LayoutParams( 502,64,140,582 ) );
 layout.addView( Itext );
 Iweight = new weight();
 Iweight.setLayoutParams( new AbsoluteLayout.LayoutParams( 500,64,140,654 ) );
 layout.addView( Iweight );
 Icode = new code();
 Icode.setLayoutParams( new AbsoluteLayout.LayoutParams( 498,68,142,728 ) );
 layout.addView( Icode );
 Iresult = new result();
 Iresult.setLayoutParams( new AbsoluteLayout.LayoutParams( 634,70,0,804 ) );
 layout.addView( Iresult );
 ILABEL10 = new LABEL10();
 ILABEL10.setLayoutParams( new AbsoluteLayout.LayoutParams( 116,66,8,370 ) );
 layout.addView( ILABEL10 );
 ILABEL11 = new LABEL11();
 ILABEL11.setLayoutParams( new AbsoluteLayout.LayoutParams( 118,68,4,442 ) );
 layout.addView( ILABEL11 );
 ILABEL18 = new LABEL18();
 ILABEL18.setLayoutParams( new AbsoluteLayout.LayoutParams( 130,66,0,728 ) );
 layout.addView( ILABEL18 );
 ILABEL16 = new LABEL16();
 ILABEL16.setLayoutParams( new AbsoluteLayout.LayoutParams( 130,64,0,580 ) );
 layout.addView( ILABEL16 );
 ILABEL17 = new LABEL17();
 ILABEL17.setLayoutParams( new AbsoluteLayout.LayoutParams( 126,70,0,650 ) );
 layout.addView( ILABEL17 );
 ILABEL15 = new LABEL15();
 ILABEL15.setLayoutParams( new AbsoluteLayout.LayoutParams( 130,62,0,514 ) );
 layout.addView( ILABEL15 );
 GUI_created( layout );
}
}
</codetext>
</codeclip>
<ID_maker>38</ID_maker>
<height>400</height>
<レイアウト>音声キーボード設定
322
485
223
253
248
xxscale=2
BUTTON;config;CONFIG;212;3;109;30;51;51;51;193;189;189;Dialog;16;null;0;0;1;0;1;Button;
BUTTON;learn;LEARN;1;444;175;36;5;3;0;193;189;189;Dialog;16;null;0;0;1;0;1;Button;
BUTTON;ins;INS;1;3;99;31;51;51;51;193;189;189;Dialog;16;null;0;0;1;0;1;Button;
BUTTON;del;DEL;106;3;101;31;51;51;51;193;189;189;Dialog;16;null;0;0;1;0;1;Button;
BUTTON;prev;&lt;;1;38;37;140;0;0;0;238;238;238;Dialog;12;null;0;0;1;0;1;Button;
BUTTON;next;&gt;;283;38;39;141;0;0;0;238;238;238;Dialog;12;null;0;0;1;0;1;Button;
HSLIDER;voice_no;0;100;66;184;256;35;163;184;204;238;238;238;1;0;1;SeekBar;
HSLIDER;bright;0;100;65;221;256;34;163;184;204;238;238;238;1;0;1;SeekBar;
HSLIDER;length;0;100;62;257;259;31;163;184;204;238;238;238;1;0;1;SeekBar;
LABEL;seimon0;null;40;38;119;140;51;51;51;0;0;0;Dialog;12;null;4;0;1;1;1;TextView;
LABEL;seimon;null;163;38;118;141;51;51;51;0;0;0;Dialog;12;null;4;0;1;1;1;TextView;
BUTTON;execute;EXECUTE;188;445;124;34;51;51;51;192;192;192;Dialog;16;null;0;0;1;0;1;Button;
TEXTFIELD;text;null;70;291;251;32;51;51;51;255;255;255;Dialog;16;1;1;0;EditText;
TEXTFIELD;weight;null;70;327;250;32;51;51;51;255;255;255;Dialog;16;1;1;0;EditText;
TEXTFIELD;code;0;71;364;249;34;51;51;51;255;255;255;Dialog;16;1;1;0;EditText;
LABEL;result;null;0;402;317;35;51;51;51;255;255;204;Dialog;20;null;0;0;1;1;0;TextView;
LABEL;LABEL10;No.;4;185;58;33;51;51;51;255;255;255;Dialog;14;null;0;0;1;0;0;TextView;
LABEL;LABEL11;Bright;2;221;59;34;51;51;51;255;255;255;Dialog;14;null;0;0;1;0;0;TextView;
LABEL;LABEL18;CODE;0;364;65;33;51;51;51;252;252;252;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL16;Text;0;290;65;32;51;51;51;255;255;255;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL17;Weight;0;325;63;35;51;51;51;255;255;255;Dialog;12;null;0;0;1;0;0;TextView;
LABEL;LABEL15;Length;0;257;65;31;51;51;51;252;252;252;Dialog;12;null;0;0;1;0;0;TextView;
</レイアウト>
</aobject>
</xobject>
